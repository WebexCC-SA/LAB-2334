{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Welcome to the webexone 2025"},{"location":"#welcome-to-webexone","title":"Welcome to webexone!","text":"<p>We\u2019re thrilled to have you with us for the next four hours as we embark on an exciting journey through the future of customer experience. Get ready for a hands-on lab filled with practical insights, interactive learning, and real-world applications designed to elevate your perspective!</p>"},{"location":"GettingStarted/","title":"Overview","text":"Welcome to the Webex Customer Contact Center Bootcamp!"},{"location":"GettingStarted/#webex-customer-contact-center-bootcamp","title":"Webex Customer Contact Center Bootcamp","text":"<p>Our three key CX software workloads work together to reimagine customer experience. In this bootcamp you will be completing three labs that cover these three pillars:</p> <ul> <li>Lab 1 - Proactive Journeys \u2013 Anticipate customer needs and   proactively address issues before they arise.</li> <li>Lab 2 - AI Agents \u2013 Automate and resolve common queries   efficiently, reducing wait times and improving satisfaction.</li> <li>Lab 3 - Human Agents \u2013 Equip human agents, supervisors,   and analysts with AI-driven insights and assistance, enhancing empathy   and service quality.</li> </ul> <p>By embedding AI at every touchpoint, Cisco helps businesses create intelligent, adaptive, and empathetic customer experiences - where every interaction is optimized for both efficiency and personalization.</p> <p>You can navigate to each Lab using the navigation links provided in this pages top banner, good luck and we hope you enjoy our bootcamp!</p>"},{"location":"Lab1/","title":"Lab 1 - Proactive Journeys","text":""},{"location":"Lab1/#lab-1-proactive-journeys","title":"LAB 1: - Proactive Journeys","text":""},{"location":"Lab1/#about-this-lab","title":"About this lab","text":"<p>At Cisco, our customer experience (CX) strategy is centered around achieving the specific outcomes our customers value the most. The CX Business Unit has crafted a strategy that showcases Cisco\u2019s unique capability to meet these outcomes through three primary pillars: Proactive Journeys, AI Agents, and Human Agents. Understanding how each pillar supports our overarching CX strategy is critical for delivering our solutions with confidence, credibility, and a consultative approach.</p> <p>Our goal is to equip you with comprehensive expertise in this growth sector for Cisco and the market at large. While we will explore each pillar separately in the corresponding Labs, the bootcamp is designed to build a strong foundation that applies broadly across various technologies and solutions, reinforcing Cisco\u2019s position as a differentiated partner for businesses seeking to enhance their customer experience.</p> <p>In this lab, the focus is on the first pillar: Proactive Journeys. This session will cover a broader spectrum of technical features and concepts essential for developing effective proactive strategies. These strategies can significantly enhance efficiency and helps to reduce the cost to serve for the business significantly.</p> <p>Our three key CX software workloads work together to reimagine customer experience:</p> <ul> <li> <p>Proactive Journeys \u2013 Anticipate customer needs and proactively address     issues before they arise.</p> </li> <li> <p>AI Agents \u2013 Automate and resolve common queries efficiently, reducing     wait times and improving satisfaction.</p> </li> <li> <p>Human Agents \u2013 Equip human agents, supervisors, and analysts     with AI-driven insights and assistance, enhancing empathy and service     quality.</p> </li> </ul>"},{"location":"Lab1/#lab-objective","title":"Lab Objective","text":"<p>This lab introduces you to the following concepts: -</p> <ol> <li> <p>Design and build Webex Connect workflows that satisfy for the     following journey requirements:</p> <ul> <li> <p>System triggered flows</p> </li> <li> <p>User initiated flows</p> </li> <li> <p>One-way transactional flows</p> </li> <li> <p>Two-way automated flows</p> </li> <li> <p>Channel fallback logic</p> </li> <li> <p>Consent management</p> </li> <li> <p>Social hours</p> </li> <li> <p>Custom variables</p> </li> </ul> </li> <li> <p>Leverage messaging templates to streamline business user priorities     without risking the technical components of a journey.</p> </li> <li> <p>Leverage flow-driven REST API\u2019s to personalize the customer     experience as well as push and pull key response and tracking data     to augment the value of and maintain client-side systems.</p> </li> <li> <p>Leverage Journey Data Services to support a contextualized history     of interactions and touchpoints with any given end-user.</p> </li> </ol>"},{"location":"Lab1/#background","title":"Background","text":"<p>The proactive journey pillar of our CX portfolio is powered by WxConnect and it\u2019s powerful low code no code flow builder and its relationship with external integrations, one-way and two-way SMS scenarios, internal CX-focused cross architecture such as JDS, and the flow builder\u2019s out-of-the-box functions that allow platform users to perform otherwise complex development tasks in a configuration-based approach. These features combined offer brands an enormous advantage to rapidly develop, execute, and iterate on CX communications journeys \u2013 whether they\u2019re proactive in nature, end-user initiated, or self-service oriented (also referred to as structured two-way engagements).</p> <p>Lab 1 focuses on creating a structured flow that is a streamlined, systematic method to automate communications. It involves:</p> <ul> <li> <p>Clear Objectives: Defined goals for each communication campaign.</p> </li> <li> <p>Sequential Steps: Ordered actions based on customer or system   interactions.</p> </li> <li> <p>Decision Points: Branching paths depending on customer or system   responses.</p> </li> <li> <p>Standardization: Reusable templates for consistent messaging.</p> </li> <li> <p>Documentation: Visual tools to map out and manage flows (ie., the flow   builder canvas).</p> </li> <li> <p>Control Mechanisms: Analytics to monitor and optimize performance.</p> </li> </ul> <p>The structured flows offer a more guided experience for the customer.</p> <p>When this lab is completed, we will have built our first workflow, that handles a two-way structured self-help delivery use-case for the Cisco Store. The persona chosen for this lab is an existing customer and the use-case represented is an online purchase of a Core Trio QI Charger (shown in the picture below) for delivery to an address already on file with the store\u2019s source system that is referred to as CRM in this lab guide.</p> <p></p> <p>The lab will follow these steps in chronological order: -</p> <ol> <li> <p>Let us assume that you are the customer that just purchased the     above charger from Cisco Store. The system will trigger a     notification which will trigger a workflow responsible for     proactively notifying the customer, that their purchase was     successful and is being processed, and it indicates the details     surrounding the order in a highly personalized manner.</p> </li> <li> <p>Then the workflow will build on the previous step and inform the     customer about the processed order and informs that the order is     about to be shipped, offering the customer the ability to either     confirm their delivery details are correct or tweak the delivery     experience.</p> <ul> <li> <p>Throughout this workflow, you will be asked to request data from     source system (CRM) to personalize the messaging and associated     logic steps involved. You will also be asked to update the CRM     based on the selections made by your end-user.</p> </li> <li> <p>Throughout this workflow, key milestones in the customer\u2019s     journey are logged to capture contextual bread crumb trail so     that the customer\u2019s interactions with respect to this journey     can be harnessed for improved awareness on the brand-side that     will benefit both the brand\u2019s operational efficiency and the     customer\u2019s overall experience.</p> </li> </ul> </li> <li> <p>The last workflow will be a SMS triggered workflow to allow the     customer\u2019s to initiate contact with the brand in a self-help     capacity at any given time to check on their order status.</p> </li> </ol> <p>Due to the time constraints, we will not build the entire flow from scratch, instead we will copy a pre-built flow and modify the variables to match the Pod assigned to you. </p>"},{"location":"Lab1/#best-practices-to-consider","title":"Best Practices to consider","text":"<p>When designing workflows, there are typically a few considerations that are rules of thumb. Outside of these, it is up to the brand to structure the flow to get a customer from point A to B.</p> <ul> <li> <p>The flows should minimize system overhead; this will reduce points of   failure and time to complete the transaction.</p> </li> <li> <p>Example: - In proactive journeys, ensuring we have customer\u2019s     consent to message them is not only important \u2013 it is the law! To     ensure we\u2019re able to respect this business condition, Webex Connect     has a built-in Contact     Policy module.     This is completely redundant if the customer already has a source of     truth such as a CRM that they prefer to use instead. That said, the     Contact Policy is a valuable \u2018last line of defense\u2019 option if the     customer doesn\u2019t trust their data or would simply prefer to use our     \u2018out of the box\u2019 feature.</p> </li> <li> <p>Reporting and metrics are important to consider up front \u2013 make sure   that whatever you\u2019re building, and its corresponding flow-design, is   architected in a manner that allows you to accurately and efficiently   collect whatever key data points are valuable towards the use-case and   the measurement of the solution.</p> </li> <li> <p>NOTE: For the purposes of this lab, we will be leveraging Journey     Data Service as our repository for key insights regarding the     customer\u2019s progression.</p> </li> <li> <p>A single flow does not need to incorporate every single decision   branch, API call, or interaction with an end user. Flows can trigger   other flows at any step, meaning you can break up your use-case into   more manageable pieces or even incorporate \u201cCatch All\u201d flows that   triage any inbound message or keyword and funnels it down to the   appropriate corresponding sub flow(s).</p> </li> <li> <p>Consider cost \u2013 By leveraging proactive journey\u2019s, brands can serve   their customers with the lowest cost per interaction compared to   talking to a human agent.--&gt;</p> </li> </ul>"},{"location":"Lab1/#cisco-store-use-case","title":"Cisco Store Use-Case","text":"<p>First, let us understand the use-case or customer journey that is part of the workflow.</p> <ol> <li> <p>The first leg of the use case is triggered when the customer     completes the purchase of the Core Trio Qi charger.</p> <p></p> <ul> <li> <p>The business is going to send a transactional notification indicating     their purchase is confirmed and being processed for shipment.</p> </li> <li> <p>As soon as the customer completes the purchase, the CRM is updated     with the customer information, and it triggers a notification request     to be sent to the customer confirming the purchase.</p> </li> </ul> </li> <li> <p>The second leg of the use case is triggered when the customer order     is shipped.</p> <p></p> <ul> <li>The notification is triggered when the order is shipped with the     delivery date and the address. This notification includes the option     to manage the order that includes changing the delivery date and safe     zone designation to deliver the package.</li> </ul> </li> </ol>"},{"location":"Lab1/#goal-1-crm-setup","title":"Goal 1: - CRM Setup","text":"<ol> <li> <p>To begin the lab, scan the QR code that is provided to you by the     proctor</p> </li> <li> <p>After you have answered the questions, you will receive the \u201cPOD\u201d     assignments with all the credentials that is required for this lab.</p> </li> <li> <p>Open a web browser and navigate to http://crm.cxocoe.us and login     with the \u201cCRM Login and Password\u201d that was provided to you in step     #2</p> <p></p> </li> <li> <p>The first step is to create the customer record in the CRM. For this     session, we are going to use a \u201cAPI\u201d end point as our CRM. To add     your customer record, open a web browser and go to     http://crm.cxocoe.us. The webpage displayed is as shown below.</p> <p></p> </li> <li> <p>Click on \u201cPost CRM Data\u201d at the top navigation bar or click on \u201cGo\u201d     button displayed within Post CRM Data contact card.</p> <p></p> </li> <li> <p>Add the data to the following fields: -</p> <p></p> <ul> <li> <p>First Name: - Enter your First name or a fake first name </p> </li> <li> <p>Last Name: -  Enter your Last name or a fake last name</p> </li> <li> <p>Phone Number: - Enter your mobile number including the country code (For ex:- if you are in US and your phone number is +14088881111, please enter 14088881111), this should be a number that can receive SMS messages</p> </li> <li> <p>SMS Consent: - Yes (for this lab, we will pretend to have obtained customer consent)</p> </li> <li> <p>Order ID: - This will be automatically set to your phone number</p> </li> <li> <p>Product Name: - Core Trio QI Charger</p> </li> <li> <p>Delivery Address: - Any fake address</p> </li> <li> <p>Delivery ETA: - any date in future</p> </li> <li> <p>Delivery Status: - for the first part of the lab, set this to \u201cNot Shipped\u201d</p> </li> <li> <p>Safe Location: - Set to either \u201cFront Door\u201d, \u201cBack Door\u201d or \u201cGarage\u201d</p> </li> <li> <p>Time Zone: - America/Chicago</p> </li> <li> <p>Alternate Date 1: - Set it to any date after DeliveryETA date</p> </li> <li> <p>Alternate Date 2: - Set it to any date after DeliveryETA date that is different than Alternate Date 1</p> </li> </ul> </li> <li> <p>After entering the data, click \u201csubmit order data\u201d button to create     the CRM record.</p> <p></p> <p></p> </li> <li> <p>If the data entry is successful, http response will show the status     code \u201c200 ok\u201d as shown below.</p> <p></p> </li> <li> <p>To view the data, click on \u201cGet CRM Data\u201d in the top menu</p> <p></p> </li> <li> <p>In the \u201cGet CRM data\u201d screen, enter the phone number that was used     to create the record in step #3 and click on \u201cGet Data\u201d button.     Observe the result (If the operation status pop up window is showing \"Retrieving      data\",click \"close\", to close the pop up window) and verify the data that was entered.      We will use this data as our CRM record for all parts of our lab.</p> <p></p> </li> <li> <p>In case you need to make any changes to the CRM data or record,     click on \u201cUpdate CRM Data\u201d in the top menu.</p> <p></p> </li> <li> <p>To update any field, enter the phone number for the order Id. Click     the drop down \u201cField to Update\u201d to select field that needs to be     updated and enter the updated information in the \u201cNew Value\u201d. For     Ex: - In the below image, we are going to update the \u201cAlternate Date     1\u201d from 4/01/2025 to 4/21/2025. In case, there is a need to update     multiple fields, you can update one field at a time.</p> <p></p> <p></p> </li> <li> <p>Now try step #10 \u2013 Get CRM data and validate the changes are     updated.</p> </li> </ol>"},{"location":"Lab1/#goal-2-get-started-with-the-flow","title":"Goal 2: - Get Started with the flow","text":"<p>Due to time constraints, for this goal you are going to copy an existing flow and modify it. Lab 2 will be focused on you building it so please don\u2019t worry about not getting to put together the building blocks for the customer journey in this lab.</p> <p>By now, you should have the \u201cPOD\u201d assignments and the credentials for the pod. We are going to use the admin account for this part of the lab. The admin account is of the format admin\\&lt;pod#&gt;@ciscolivelab.wbx.ai, where pod# is the pod number assigned to you. Ex: - Pod 22, the admin account will be admin22@ciscolivelab.wbx.ai</p> <p>Let us get started!</p> <ol> <li> <p>Open a web browser and go to https://admin.webex.com and login     with the assigned admin credentials for your pod.</p> </li> <li> <p>On successful login, you should be on the Contact Center Overview     landing page as shown below.</p> <p>Note: There will be an error message on the bottom right which can be     ignored. It is an error message to let us know that the user was not     added to few groups and can be ignored.</p> <p></p> </li> <li> <p>Click on \u201cWebex Connect\u201d under quick links. It will cross launch a     new tab and display \u201cServices\u201d. </p> <p>Note: There will be an error message on the bottom right which can be     ignored. It is an error message to let us know that the user was not     added to few groups and can be ignored. </p> <p></p> </li> <li> <p>Click on \u201cSearch Services\u201d and type in Pod \\&lt;your pod number&gt; and     press \u201cEnter\u201d. In my example below, my Pod # is 60</p> <p></p> </li> <li> <p>Click on Pod 60 and you will see the \u201cDashboard\u201d as shown below.</p> <p></p> </li> <li> <p>Click on \u201cFlows\u201d.</p> <p></p> </li> <li> <p>There should be a starter flow called \u201cLab1 Starter Flow\u201d. We will     create a flow by copying the starter flow. Click on \u201cCreate Flow\u201d.</p> <p></p> </li> <li> <p>The next screen presented is to \u201cCreate Flow\u201d.</p> <p></p> </li> <li> <p>Add the following details: -</p> <ul> <li> <p>Flow Name: - Enter the name with Pod# Lab1 Proactive Journey. In my example below, the pod assigned is 60 and my flow name is \u201cPod60 Lab1 Proactive Journey\u201d.</p> </li> <li> <p>Method: click the drop-down selection and select \u201cCopy from existing flow\u201d.</p> </li> <li> <p>Select Flow: click the drop-down selection and select \u201cLab1 Starter Flow\u201d.</p> </li> <li> <p>Click \u201cCreate\u201d.</p> </li> </ul> <p></p> </li> <li> <p>The proactive journey gets triggered when the CRM triggers the     notification to a webhook. The next screen presented is to     \u201cConfigure Webhook\u201d.</p> <p></p> </li> <li> <p>Under \u201cConfigure webhook settings to trigger this flow\u201d, select     \u201cCreate new event\u201d and add the following details.</p> <ul> <li> <p>Name: Pod# Lab1 Trigger. In the below example, the pod assigned is 60 and the name is set to \u201cPod60 Lab1 Trigger\u201d.</p> </li> <li> <p>Example Data: Copy and paste the following JSON code.</p> </li> <li> <p>Note: - JSON is case sensitive so please make sure to pay attention to the JSON and maintain the same format.</p> </li> </ul> <pre><code>{\n\"orderId\" : \"\"\n}\n</code></pre> <p></p> </li> <li> <p>Click on Parse button. This will create \u201corderId\u201d as a variable that     can be used throughout the flow.</p> <p></p> <p>After the \u201cParse\u201d button is clicked, observe the variable created under the \u201cParsed Variables(0)\u201d. This method can be used to pass any number of custom variables from CRM or external data sources when triggering a flow. The variables created can also be accessed by clicking on \u201cOutput Variables\u201d.</p> <p></p> <p></p> </li> <li> <p>We will rename the \u201cConfigure Webhook\u201d to \u201cTrigger Proactive     Journey\u201d by clicking on the pencil icon as shown below. Enter the     name and click the check mark to save the edits.</p> <p></p> <p></p> </li> <li> <p>Click \u201cSave\u201d to save the node configuration.</p> </li> <li> <p>Click \u201cSave\u201d at the top menu to save the flow. When the flow is     saved, the \u201cErrors &amp; Warnings\u201d message will pop up and we will work     towards fixing the errors in the upcoming steps, but we will ignore     the warnings. It is strongly recommended that warnings are addressed     in a production environment for optimal experience.</p> <p></p> <p></p> </li> </ol>"},{"location":"Lab1/#goal-3-configuring-the-flow","title":"Goal 3 \u2013 Configuring the flow","text":"<p>Orient yourself with the canvas/UI in Webex Connect and some key tools/functions (if you find yourself struggling, try our documentation page too @ help.webexconnect.io):</p> <p></p> <ol> <li> <p>The first step is to identify the \u201cSMS\u201d nodes and modify them. The     SMS node enables the brand to send outbound SMS message to their     customers. The SMS node is indicated in the flow as below</p> <p></p> </li> <li> <p>The flow consists of 10 SMS nodes and each of the SMS node must be     modified to include the SMS number. The power of WxConnect is its     ability to create dynamic variables that makes the flow reusable. We     will leverage a dynamic variable that stores the SMS number and     assign this variable to the SMS nodes.</p> <p></p> </li> <li> <p>Open SMS node #1 as shown in step #2 by double clicking on the SMS     node to open the configuration settings of this node.</p> <p></p> </li> <li> <p>Observe the image from the above step and note that \u201cFrom Number\u201d is     blank. This is one of the errors reported when you save the flow. As     mentioned earlier in the guide, we will be using a variable called     \u201cyourAssignedSMSNumber\u201d to dynamically store the number. This     variable is already created for you. To add this variable, click on     \u201cFrom Number\u201d to select the field and then expand the \u201cCustom     Variables\u201d on the right of the node as shown below and then click on     \u201cyourAssignedSMSNumber\u201d variable to add it to the \u201cFrom Number\u201d     field. Click save to save the node config.</p> <p></p> <p></p> </li> <li> <p>Repeat the above steps for all the other 9 SMS nodes.</p> </li> <li> <p>Click save on the top right after completing step #5.</p> </li> <li> <p>Let us now open the configuration of SMS node #3 to understand the     \u201cTemplate\u201d concept.</p> <p></p> </li> <li> <p>In this node configuration, observe that we are not configuring the     SMS message to be sent directly in the node, instead we are     utilizing messaging templates.</p> <p></p> <p>Typically, you can proceed in one of two ways \u2013 you can simply populate the message in the body of the SMS node, or you can leverage templates. For the purposes of this lab, we\u2019ll be going down the template path so that you not only understand how they work but also because it is often the case that customers don\u2019t use the same teams to devise messaging content and technical integrations / wiring up of a solution. Thus, templates allow business users or marketeers to still control and own a piece of the build process (that they can iterate on later) without impacting IT and creating backlog for simple copy changes.</p> </li> <li> <p>To check out the templates, please save your work and navigate out     of the flow canvas by clicking the carrot (or chevron, if you     prefer) that navigates you back into your service \u2013 top left of the     page:</p> <p></p> <p>Then click on the wrench in the menu panel to the left and select \u2018Templates\u2019.</p> <p></p> <p>Click on any pre-configured template to view the template configuration.</p> <p></p> <p></p> </li> <li> <p>Now that we have seen the templates and the purpose of templates,     let us get back to modifying the flow by clicking on the tile window     on the left.</p> <p></p> <p>Search the Pod and click on the Pod # that is assigned to you.</p> <p></p> <p></p> <p>There will be two flows in your service, click on the flow \u201cPod# Lab1 Proactive Journey\u201d.</p> </li> <li> <p>As next step we must modify the \u201creceive\u201d nodes in the flow to add     the sms numbers. Open each receieve node explicitly and click save, to save     the configuration.Receive nodes facilitate the brands to receive message or message replies      from their customers. Receive nodes in the flow can be identified by the below image.</p> <p></p> </li> <li> <p>There are 5 receive nodes in the flow as identified below.</p> <p></p> </li> <li> <p>Open \u201cReceive\u201d node #1 identified in step #12 by double clicking     on the node to verify the configuration and click save.</p> <p></p> </li> <li> <p>Open all other \u201cReceive\u201d nodes to make sure the variable is set for     the \u201cNumber\u201d field and click save on each node.</p> </li> <li> <p>If any of the \u201creceive\u201d node is not populated with the variable as     shown below</p> <p></p> <p>Click on the Number field and select \u201c\u2014Dynamic--\u201d as shown below.</p> <p></p> <p>Now expand the \u201cCustom variables\u201d located on the right hand side of the node and select \u201cyourAssignedSMSNumber\u201d as shown below.</p> <p></p> <p>Now click on Keyword and select \u201c*\u201d. The \u201c*\u201c keyword allows to accept any message. Click \u201csave\u201d to save the configuration.</p> </li> <li> <p>Click \u201cSave\u201d on the top right corner to save the entire flow and     observe the errors and warnings. There should be no errors reported,     however there will be warnings that we will ignore for this lab.</p> <p></p> </li> <li> <p>We are all set to put the flow into production. Click on \u201cMake     Live\u201d.</p> <p></p> </li> <li> <p>Make live configuration is presented, where we will assign the     actual SMS number to the dynamic variable. Click on \u201cNumbers\u201d and     select the SMS number that you received in the text by scanning the     QR code along with your credentials. In the example below, the     assigned SMS number to Pod60 is 14087862126.</p> <p></p> <p>Click on \u201cNumbers\u201d field and select the number that was assigned to your pod.</p> <p>Note: - Please check the box against your assigned number only.</p> <p></p> <p></p> <p>Type your number in the format 1+\\&lt;phonenumber&gt; as shown in the image below</p> <p></p> </li> <li> <p>Click \u201cMake Live\u201d to put the flow in production. Please note, the     flow will take approximately 1 to 2 mins to be live. The status     initially will show \u201cPublishing\u201d and will change to \u201cLive\u201d to     indicate it is live and in production.</p> <p></p> </li> </ol>"},{"location":"Lab1/#goal-4-testing-the-proactive-journey","title":"Goal 4 \u2013 Testing the Proactive Journey","text":"<p>It is now time to test the flow that we put in production. As mentioned previously in the lab guide, the flow that we built is triggered by certain notifications from the CRM or system of record updates. We will simulate this by creating this notification and keep your mobile phones ready, let us begin testing.</p> <ol> <li> <p>Open the flow that we put into production and double click on the     first node \u201cTrigger Proactive Journey\u201d.</p> <p></p> <p>In the configuration window, locate the field named \u201cWebhook URL\u201d and the url is of the format https://hooks.us.webexconnect.io/events/XXXXXXXXX. Copy the last part of the URL \u201cXXXXXXXXXX\u201d to test.</p> <p></p> </li> <li> <p>Open a web browser and login to http://crm.cxocoe.us with the     credentials provided.</p> <p></p> </li> <li> <p>Click on \u201cKick off Proactive Flow\u201d.</p> <p></p> <ul> <li> <p>Phone Number: Enter your mobile number with country code. Ex: - 14081111111</p> </li> <li> <p>Webhook Id: Enter the copied text from step #1</p> </li> </ul> <p>Then click on \u201cStart Flow\u201d to trigger the proactive journey.</p> <p></p> </li> <li> <p>The flows provide debug capability to identify any issues with the     configuration. The debug can be accessed by clicking on bug icon     that is located on the right of the flow.</p> <p></p> <p>The debug window contains list of transaction id\u2019s that the flow has executed. Click on the appropriate transaction id to debug.</p> <p></p> <p>The debug output is encrypted by default. Click \u201cDecrypt Logs\u201d to view the logs in plain text.</p> <p></p> </li> <li> <p>You should have received a proactive notification on your mobile     phone notifying you the purchase of a Core Trio Qi charger!</p> <p></p> </li> <li> <p>Let us now create the shipped notification. Open web browser and     login to http://crm.cxocoe.us with the provided credentials.</p> </li> <li> <p>Click on \u201cUpdate CRM Data\u201d</p> <p></p> <p>The field to update is Delivery Status and the value is \u201cshipped\u201d. Then click \u201cUpdate Record\u201d.</p> <p></p> </li> <li> <p>Now let us test again by repeating Step #3</p> <p></p> </li> <li> <p>Verify the messages that you received on your mobile phone</p> <p></p> </li> <li> <p>The test can be repeated for changing the date if desired.</p> </li> </ol>"},{"location":"Lab1/#goal-5-the-open-door-policy-optional-goal","title":"Goal 5 \u2013 The Open Door Policy (OPTIONAL GOAL)","text":"<ul> <li> <p>Although this lab focuses on 'proactive' engagement \u2013 where the brand   uses its insights to initiate contact at, or even before, a customer's   moment of need \u2013 it's also crucial that customers can respond to these   communications. Just as you might reply to a personal update with   questions, customers should be able to engage in a dialogue with the   brand following any initiated contact.</p> </li> <li> <p>When a brand sends a notification, you should have the capability to   respond to it, asking any questions that fall within the scope of your   relationship with the brand, regardless of the notification's original   intent.</p> </li> <li> <p>Although there are different ways for solving this; structured flows   vs scripted AI vs autonomous AI vs directing the query to a human on   the brand-side, Cisco maintains a strong advantage in its ability to   facilitate this \u2018open door policy\u2019 for any of our customers.</p> </li> <li> <p>Our final objective within this lab is precisely this, albeit through   the lens of structure flows.</p> </li> <li> <p>As you will have likely noticed, in the final confirmation message we   defined for the end-user, there was a call to action where we stated,   \u201cIf at any time you would like to check on your order status, you can   text STATUS to this number.\u201d This now means that we need a way of   capturing that keyword and acting on it.</p> <ul> <li>NOTE: Keywords are not the only way of capturing user-initiated     contact. We could instead go the route of a CatchAll flow that is     literally open to any input from anyone and then filters input     accordingly and funnels them down appropriate paths based on the     governing business rules at play. We\u2019re taking the keyword approach     here to honor the \u2018structured\u2019 experience but please note this is     not the only way, nor is it necessarily the recommended way     depending on the use-case or breadth of technology at play within     the solution.</li> </ul> </li> <li> <p>This one is relatively simple \u2013 here is what it should look like when   you\u2019re done:</p> <p></p> </li> </ul> <p>Let us build this simple flow:</p> <ol> <li> <p>From the dashboard of your service, click on \u201cCreate Flow\u201d.</p> <p></p> </li> <li> <p>In the \u201cCreate Flow\u201d shown below, add the details.</p> <p></p> <ul> <li> <p>Flow Name: Pod# Reactive Status Catch All</p> </li> <li> <p>Method: New Flow</p> </li> <li> <p>Click \u201cCreate\u201d.</p> </li> </ul> <p></p> </li> <li> <p>In \u201cSelect Trigger Category\u201d, select \u201cSMS\u201d as the channel.</p> <p></p> </li> <li> <p>Once you\u2019ve selected SMS, the \u201cConfigure SMS Event\u201d window appears.     Here you can define the keyword and/or conditions for the inbound     message (known in industry terms as an MO \u2013 mobile Originated     message).</p> <p></p> </li> <li> <p>Select your assigned SMS number from the \u201cINCOMING NUMBER\u201d.</p> <ul> <li> <p>Select * as the KEYWORD and then click to \u201cVERIFY\u201d. The verify button checks if there are other flows that utilize the same keyword and if it does, there will be an error displayed. You\u2019ll see that instead of an actual keyword value in the \u2018keyword\u2019 field, we\u2019ve placed an asterisk * which indicates to the corresponding flow and session that anything on the SMS channel addressed to the respective SMS number should be captured by this flow. Effectively, a \u2018CatchAll\u2019 at this point, however, as indicated in the screenshot to follow, we\u2019ve put some boundaries up around this \u2013 indicating that the governing logic for the flow should only allow it to trigger on behalf of an entry if those conditions are met and if there are no other live sessions (meaning that if an end-user is in a separate flow\u2019s session that corresponds to the same number, and they enter valid conditional keywords defined here, such as \u2018status\u2019 or \u2018order\u2019, this flow will NOT execute).</p> </li> <li> <p>NOTE: The secondary conditions defined as \u2018equalsignorecase\u2019 are     important to further enforce the rules governing if/when this flow     gets triggered</p> </li> <li> <p>To add conditions, check conditions and this will bring up the     conditions box. Select \u201csms.message\u201d under \u201cChoose Field\u201d and     \u201cequalsignorecase\u201d under \u201cChoose Condition\u201d. For input value, type     \u201cstatus\u201d.</p> </li> <li> <p>Click \u201cOR\u201d button to add \u201cOR\u201d operator. Then select \u201csms message\u201d     and \u201cequalsignorecase\u201d as field and condition respectively. Type in     \u201corder\u201d for the value. This ensures that the inbound message to the     SMS number will trigger a flow if it matches either \u201cstatus\u201d or     \u201corder\u201d in the keyword.</p> </li> <li> <p>Click \u201cSave\u201d.</p> </li> </ul> <p></p> </li> <li> <p>When we receive an inbound message from the customer asking for     their order status, we need to look up the order information in the     CRM or in the system of record. In the node palette, displayed to     the left, click on integrations and find a node named \u201cCustom CRM\u201d.     This can also be searched for using the search button.</p> <p></p> </li> <li> <p>Drag the \u201cCustom CRM\u201d node to the flow canvas next to the SMS node.</p> <p></p> </li> <li> <p>To wire the two nodes, click on the \u201cgreen\u201d dot of the SMS node and     drag it until it snaps on to the \u201cCustom CRM\u201d node.</p> <p></p> <p></p> </li> <li> <p>Now double click on the \u201cCustom CRM\u201d node to add details.</p> <p></p> </li> <li> <p>Click on \u201cSelect Method Name\u201d and select \u201cFetch CRM Data\u201d. This should     enable the Phone Number field and to fill this, expand on \u201cStart\u201d     listed under \u201cInput Variables\u201d that can be found on the right side     of the panel as shown below.</p> <p></p> <p>Click on \u201csms.senderNumber\u201d variable found in the list.</p> <p></p> <p>Click \u201cSave\u201d to save the configuration.</p> </li> <li> <p>Next, you will simply add an SMS node to the flow and then select     the template called Final Confirmation and     populate the corresponding variables with the relevant parameters     that is extracted via the Custom CRM node. From the node palette,     under channels, select \u201cSMS\u201d and drag it to the canvas next to the     \u201cCRM\u201d node. Now wire the CRM node to SMS node by clicking on the     green dot and snapping it to the SMS node.</p> <p></p> <p></p> <p></p> </li> <li> <p>Click on the SMS node to configure.</p> <p></p> <p></p> <p>Observe the Message body and this is the power of templates, which allows the substitution of variables. All the variables for this section is derived from \u201cCustom CRM\u201d. To add the variables, click on the value field under each variable and then expand the \u201cCustom CRM\u201d on the right panel to choose the appropriate variables as shown below.</p> <p></p> <p></p> <p>Click \u201cSave\u201d to save the node configuration.</p> </li> <li> <p>Let us capture the customer journey in Journey Data Service (JDS).     JDS is a free form API that can be used across any system to capture     the moments that matter for the customer journey. Find the JDS node     from the node palette, under integrations, find JDS node and drag it     to the canvas. Wire the connection by connecting the green dot from     the previous SMS node to snap on to the JDS node.</p> <p></p> </li> <li> <p>Double click the JDS node to configure it. Click on Method Name and select     \u201cCreate Events\u201d. Fill the following details</p> <ul> <li> <p>Transaction Id: click on the field and select the variable   \u201csms.transId\u201d from the start node on the right of the panel.</p> </li> <li> <p>What Type of Interaction: Order check</p> </li> <li> <p>What is the Source of this Transaction: Website</p> </li> <li> <p>Enter the Identity to Tag This Transaction: Click on the field and   select \u201cCustom CRM\u201d on the right panel and in the variables click   on orderId.</p> </li> <li> <p>What Identity Type is This? From the drop down, select temporaryId</p> </li> <li> <p>Enter the Subtitle Information: Enter text Order status request.</p> </li> <li> <p>What Icon Type Do you want to use? Enter text email-happy</p> </li> <li> <p>What is the title for this transaction: Enter text Order status   request</p> </li> <li> <p>What is the Product Name? Click on the field and select \u201cCustom   CRM\u201d on the right panel and in the variables click on productName.</p> </li> <li> <p>What is the Website Information: Enter text   [cisco](www.cisco.com)</p> </li> <li> <p>What was the last Action: Enter Text Order status update request.</p> </li> <li> <p>What was the channel used for this transaction: Enter text SMS.</p> </li> <li> <p>What is the Order Id: Click on the field and select \u201cCustom CRM\u201d   on the right panel and in the variables click on orderId.</p> </li> <li> <p>What is the delivery status: Click on the field and select \u201cCustom CRM\u201d on the right panel and in the variables click on   deliveryStatus.</p> </li> </ul> <p></p> <p></p> <p></p> <p>Click \u201cSave\u201d to save the node configuration.</p> </li> <li> <p>Click the green dot from the JDS node and drag to open canvas to     open the \u201cEnd\u201d configuration.</p> <p></p> <p>Click the drop down on \u201cNode Event\u201d and select \u201csuccess\u201d and select \u201c101 \u2013 Successfully completed flow [Success] under \u201cFlow Result\u201d.</p> <p></p> </li> <li> <p>Click \u201cSave\u201d and Click \u201cMake live\u201d to put the flow into production.</p> </li> <li> <p>Now let us test the catch all flow. The last step from the previous     goal was to test and the message delivered looks like the below     example.</p> <p></p> </li> <li> <p>The last message suggests the customer to send a text \u201cSTATUS\u201d to     that number.</p> </li> <li> <p>From your mobile phone reply to the above text with \u201cSTATUS\u201d     message.</p> <p></p> <p>Congratulations! You have successfully completed Lab 1.</p> </li> </ol>"},{"location":"Lab2/","title":"Lab 2 - AI Agents","text":""},{"location":"Lab2/#lab-2-ai-agents","title":"LAB 2: - AI Agents","text":""},{"location":"Lab2/#about-this-lab","title":"About this lab","text":"<p>Cisco\u2019s AI-powered Customer Experience (CX) strategy is designed to transform the way businesses engage with customers by making interactions more proactive, more self-service driven, and more empathetic. AI is embedded across our CX portfolio to augment both digital and human interactions, ensuring a seamless, efficient, and personalized experience.</p> <p>AI Agents serve as the autonomous AI front door to your business, providing instant, accurate, and scalable support for routine inquiries. By streamlining processes and reducing manual effort, AI Agents free up human agents to focus on more complex, high-value interactions.</p>"},{"location":"Lab2/#lab-objective","title":"Lab Objective","text":"<p>This lab introduces you to the following concepts: -</p> <ol> <li> <p>Create an AI Agent in the new AI Agent Studio UI.</p> </li> <li> <p>Train the Agent on a predefined product spec document as well as the     store's Return Policy.</p> </li> <li> <p>Build Agent actions and supporting workflows in Webex Connect to     handle the following:</p> <ul> <li> <p>Check order delivery status</p> </li> <li> <p>Change the delivery date</p> </li> <li> <p>Add/Edit a \"Safe Area\" for delivery</p> </li> <li> <p>Cancel an order, with escalation prompts from the AI Agent</p> </li> </ul> </li> <li> <p>Integrate the AI Agent into the final flow from Lab 1 by updating     the \"Manage My Order\" branch.</p> </li> <li> <p>Use JDS (Journey Data Service) within the Agent action flows to     capture context and pass it on to the Agent Desktop.</p> </li> </ol>"},{"location":"Lab2/#background","title":"Background","text":"<p>Lab 2 focuses entirely on setting up the AI Agent within the new AI Agent Studio, combining the ability to answer knowledge-based questions with the capability to perform actions using Connect Flows as fulfillment mechanisms.</p> <p>We will start by exploring the new AI Agent Studio, which brings together action-based and knowledge-based agents into a single Autonomous Agent. From there, we will configure the fulfillment flows required to replicate the actions covered in Lab 1. Finally, we\u2019ll integrate the AI Agent into the broader flow, demonstrating how it enhances user experience and streamlines workflow automation.</p> <p>To speed up training, we have provided prebuilt Knowledge Bases and supporting materials, which you can find at https://webexcc-sa.github.io/LAB-2334/kb/</p> <p>These are the Knowledge Bases contained therein that we\u2019ll use for this lab</p> <ul> <li> <p>Product Information</p> </li> <li> <p>Order and Returns</p> </li> </ul>"},{"location":"Lab2/#prompt-engineering-a-vast-and-evolving-discipline","title":"Prompt Engineering: A Vast and Evolving Discipline","text":"<p>In this lab, we will cover the basics of prompt engineering, the practice of designing and refining inputs to effectively guide AI models toward generating desired outputs. As it applies to our specific use case, prompt engineering involves structuring prompts strategically to improve accuracy, relevance, and consistency in AI responses. While this will provide a foundation, it\u2019s important to note that prompt engineering is a vast and evolving field with many techniques, strategies, and best practices that extend beyond what we\u2019ll explore here.</p> <p>Our goal is to introduce core concepts and demonstrate practical applications within the scope of this guide, but this is by no means an exhaustive representation of what\u2019s possible. We encourage you to experiment with different approaches, refine your prompts, and explore additional resources to deepen your understanding. AI models respond dynamically to language, and even small adjustments can yield significantly different results. By continuously iterating and testing, you can uncover new ways to optimize performance and tailor responses to your needs.</p> <p>Think of this lab as a starting point\u2014there\u2019s a lot more to discover!</p>"},{"location":"Lab2/#goal-1-create-an-ai-agent-in-the-ai-agent-studio","title":"Goal 1 \u2013 Create an AI Agent in the AI Agent Studio","text":"<ol> <li> <p>Open web browser and navigate to https://admin.webex.com and login     with the admin credentials assigned to your pod. Under Quick     Links Webex AI Agent or under\ud83e\udc6aCustomer Experience AI Agents.</p> <p>Note: There will be an error message on the bottom right which can be     ignored. It is an error message to let us know that the user was not     added to few groups and can be ignored.</p> <p></p> </li> <li> <p>The AI Agent dashboard is launched.</p> </li> <li> <p>Click Create agent button in the top right corner.</p> <p></p> </li> <li> <p>Click Start from scratch.</p> <p></p> </li> <li> <p>Click Next button.</p> </li> <li> <p>Click Autonomous and configuration screen will appear.</p> <p></p> </li> <li> <p>Fill in the Agent name and Agent\u2019s goal. The System ID    is auto generated and under AI engine there are two options</p> <ol> <li>Webex AI Pro 1.0 - This engine supports multiple languages including English.</li> <li>Webex AI Pro-US 1.0 - This engine supports only English language.    This is where additional engines can be selected as and when they become available.</li> </ol> <p>Agent name: In the below example, the pod# is 60, so the name is prefixed with Pod60. All the pods AI Agents will be accessible and hence it is strongly recommended to Prefix the AI Agent name with your Pod#.</p> <p></p> <p>Feel free to experiment with different wording for the Agent\u2019s goal. You can click on the tooltip link for guidance from the AI product team (this is also where you\u2019ll find the AI Agent product documentation). While we will provide the exact prompts used in our setup, these are not the only valid approaches. There is no single \"correct\" way to structure a prompt - variations can lead to different outcomes. We encourage you to explore and refine your prompts to see what works best for your use case.</p> <p>Agent\u2019s goal prompt example:</p> <pre><code>You are a friendly and efficient AI Agent. You are focused on\nanswering product questions, providing answers to general FAQs and\nmanaging orders for the Cisco Store.\n</code></pre> <p>We will refine and iterate on the original prompts to demonstrate how adjusting the wording can correct undesired behavior.</p> </li> <li> <p>Click on Create in the bottom right corner.</p> </li> <li> <p>The AI Agent profile tab is presented.</p> <p></p> </li> </ol>"},{"location":"Lab2/#configure-ai-agents-instructions","title":"Configure AI Agents Instructions","text":"<p>The Agent Goals section defines the overall purpose and role of the AI Agent\u2014what it is designed to achieve and how it should assist users.</p> <p>The Instructions section provides detailed, step-by-step guidance on how the agent should execute its tasks, including specific actions, response formatting, and behavior rules to ensure accurate and efficient interactions.</p> <p>You can click Insert Example to view a basic, generic template or refer to the tooltip link for additional guidance. When working with LLM-powered agents, providing clear and actionable instructions is essential to ensure they perform tasks accurately and efficiently.</p> <p>To achieve this, it\u2019s important to first identify the specific actions the agent needs to perform so they can be explicitly referenced in this section. Based on our goal list, we will define actions for the following capabilities:</p> <ul> <li> <p>Check order delivery status \u2013 Action: [fetch_status]</p> </li> <li> <p>Change the delivery date \u2013 Action: [change_date]</p> </li> <li> <p>Add/Edit a \"Safe Area\" for delivery \u2013 Action: [safe_area]</p> </li> <li> <p>Cancel an order, with escalation prompts from the AI Agent \u2013 Action:   [cancel_order]</p> </li> </ul> <p>Our approach will be to provide instructions in a step-by-step format, clearly outlining each action we want the AI Agent to perform. To make these actions explicit, we will enclose them in square brackets, like this: [fetch_status].</p> <p>Instructions prompt example: </p><pre><code>Answer any questions from the user in a friendly and professional\nmanner, referring to the relevant Knowledge sources as appropriate.\nYou will also be able to manage any existing orders as follows:  \nCollect an Order ID Number (\"orderId\") to be able to determine what\norder is being referenced.\n\n**Make a Mental Note**The order ID is in the phone number format.\nPlease ignore the special characters in \"orderId\" and just store the numbers**\n\nThese are your available actions, once the \"orderId\" is known:\n\n 1. [fetch_status] - use the \"orderId\" to fetch the status of the\n      order.  \n 2. [change_date] - change the desired delivery date.  \n 3. [safe_area] - add or update the specified safe area for the\n     courier to leave the package.  \n 4. [cancel_order] - cancels the current order by changing the value\n     of \"deliveryStatus\" to \"Cancelled\". This action depends on the value\n     of \"deliveryStatus\" not being equal to \"Shipped\".\n\n - If an order cannot be canceled because it has already shipped, the\n    only way the user can proceed is by contacting a human expert on the\n    number \\&lt; **WEBEX CONTACT CENTER FLOW ENTRY POINT NUMBER**\\&gt;. This is\n    facilitated in the \\[cancel_order\\] action.\n\n - If the user requests for order status update, provide the order\n   status which includes \"deliveryStatus\" and \"deliveryETA\". If the\n   \"deliveryStatus\" is not equal to \"Shipped\", inform the user with the\n   response that the order is being processed and they will be informed\n   with a delivery date after it is processed. When you respond to this\n   message always greet the user in a polite way and include the\n   \"firstName\" in the greeting along with the \"orderId\".\n</code></pre> Note 1: The Webex Contact Center Flow Entry Point Number is the Telephone Number that was assigned to you along with the Pod assignment.<p></p> <p>Instructions serve as a guide for the full range of the AI Agent\u2019s capabilities and also provide a space to refine responses retrieved from the Knowledge Base.</p> <p></p> <p>Click the Save changes button. This will save the agent and put it into a state that\u2019s ready to be previewed. That completes the initial prompt setup.</p> <p></p>"},{"location":"Lab2/#goal-2-add-knowledge-base-and-training-the-agent","title":"Goal 2 \u2013 Add Knowledge base and training the agent","text":"<p>We will now add knowledge base articles to train the AI Agent.</p> <ol> <li> <p>Click on the knowledge icon in the left side menu, and then click on     the \u201cCreate Knowledge base\u201d button in the top right of the screen.</p> <p></p> </li> <li> <p>Give the Knowledge base a name that starts with your Pod#(number).     Ex: - Pod60 Knowledge base and click Create.</p> <p></p> </li> <li> <p>You will then see the knowledge base management dashboard where you     can add knowledge in one of 2 ways:</p> </li> <li> <p>File Upload</p> </li> <li> <p>Documents \u2013 This is the method we will use for this lab</p> <p></p> <p>Additional means of adding knowledge sources will become available post General Availability, including URLs as sources of information.</p> </li> <li> <p>Open a new tab in your browser and go to https://webexcc-sa.github.io/LAB-2334/kb/     and copy the Product Information section till you reach Cisco Store.     We will copy Cisco store in the next few steps, so keep this browser     tab open.</p> <p></p> <p></p> </li> <li> <p>Now tab back to the knowledge base section and click on \u201cDocuments\u201d.</p> <p></p> </li> <li> <p>Click on \u201c+Create Document\u201d and in the pop for Document name add the     following details:</p> <ul> <li> <p>Document name \u2013 Product Information</p> </li> <li> <p>Click on \u201cAdd to new category\u201d and New Category name \u2013 Product.</p> </li> <li> <p>Click \"Save\".</p> </li> </ul> <p></p> <p></p> </li> <li> <p>In the Enter Document content section, click on the \"Enter document content\"    to paste the information copied in step #4 and click save on the top right.</p> <p></p> <p></p> </li> <li> <p>Refer to step #4 or open KB Link to copy the     rest of the information for Cisco Store: orders and returns.</p> <p></p> </li> <li> <p>Now tab back to the knowledge base creation and click on Create     Document.</p> <p></p> </li> <li> <p>For the document name \u2013 Cisco Store Orders and Returns and Add to     existing category of Product and click Save.</p> <p></p> <p>In the Enter Document content section, click on the \"Enter document content\"  to paste the information copied in step #10 and click save on the top right.</p> <p></p> <p>These files may take some time to save and in the mean time we will continue to next tasks.</p> </li> <li> <p>Head back to the Dashboard and click on the previously created AI     Agent.</p> <p></p> </li> <li> <p>Click on the Knowledge tab</p> <p></p> </li> <li> <p>Select the Knowledge Base that belongs to your pod from the dropdown     list. Note: - Please select your own pod knowledge base since it     will display the knowledge base for all Pods.</p> <p></p> <p></p> </li> <li> <p>Click on Save Changes to make the changes \u201clive\u201d.</p> <p></p> <p>Note: - You only need to Save your changes to preview them in the Studio. Publishing is only required when you want to push updates into production for use within digital or voice flows.</p> </li> <li> <p>Go ahead and preview your agent by clicking on Preview. Select either \"Start a chat\"     or Start a call\" to preview the AI Agent.</p> <p></p> <p></p> </li> <li> <p>Type in any question and observe how the AI agent responds. Feel     free to reference the product document you uploaded to find some     sample questions. Try questions related to both the product details     and returns process to verify that the agent can maintain context     across both documents.</p> <p></p> </li> </ol>"},{"location":"Lab2/#goal-3-build-agent-actions-and-supporting-workflow","title":"Goal 3 \u2013 Build Agent Actions and Supporting Workflow","text":"<p>Now that we have an AI Agent capable of answering questions from the Knowledge Base, we need to enable it to perform the specified actions.</p> <p>We\u2019ll show you how easily the Agent can be enhanced using flows in Webex Connect. This approach allows us to achieve the same outcomes as in Lab 1, but with the added efficiency, user-friendliness, and ease of setup that an LLM-powered agent provides.</p> <p>Let\u2019s begin by navigating back to Webex Connect and opening the service where you created your flows previously.</p>"},{"location":"Lab2/#step-1-create-the-flow-in-webex-connect","title":"Step 1: Create the flow in Webex Connect","text":"<ol> <li> <p>Login to control hub at https://admin.webex.com and launch Webex     connect quick link.</p> <p></p> </li> <li> <p>Find the service that belongs to your Pod and click on it to get     started.</p> <p></p> </li> <li> <p>Go to flows and click on Create Flow.</p> <p></p> </li> <li> <p>We have provided a starter flow that gets executed based on the    action called within the AI Agent. In this step we will create a    flow that is a copy of this starter flow provided. Give the new flow    a name prefixed with your Pod#, for ex:- Pod60 All Actions flow. For    the method, choose \u201ccopy from existing flow\u201d. Click on select flow    and select \u201cAll_Action_Starter_Flow\u201d and then click \u201cCreate\u201d.</p> <p></p> <p></p> </li> <li> <p>In the Configure AI Agent Event window, click save.</p> <p></p> </li> <li> <p>Open the \u201cEvaluate\u201d node within the flow to modify.</p> <p></p> </li> <li> <p>Modify the text to replace &lt;WXCC TELEPHONE NUMBER&gt; with the     Telephone number that was assigned to the pod. Ex: - if the     telephone number assigned was 14082221111, the below text will look     like</p> <pre><code>var Outcome = \"Order already shipped. The only way the user can\nproceed is by contacting an expert on the number +1408221111\";\n(\"end\")\n</code></pre> <p></p> <p></p> </li> <li> <p>Click save to save the Evaluate node config.</p> </li> <li> <p>Click Make Live to put the flow in production.</p> <p></p> </li> <li> <p>In the next window, click \u201cmake Live\u201d again to make the flow live.</p> <p></p> </li> </ol>"},{"location":"Lab2/#step-2-create-the-action-in-ai-agent-studio","title":"Step 2: Create the Action in AI Agent Studio","text":"<p>We will now link the AI Agent instruction of [fetch_status] to the action/task flow that we just built.</p> <ol> <li> <p>Back in the AI Agent menu within the AI Agent studio, click on the     Actions tab to open the list of available actions.</p> <p></p> <p>By default, there is a pre-created action called Agent Handover. If you do not want the agent to escalate interactions to a human agent, you can toggle this off.</p> <p>The rules for escalation are entirely determined by your prompting. For example, an instruction like: \"When a user asks to speak to an agent, transfer them to a human agent.\" is enough to trigger the endpoint in the associated Webex Connect or Webex Contact Center flows.</p> <p>For now, we\u2019ll focus on configuring actions and will also introduce an alternative handover mechanism.</p> </li> <li> <p>In the Action tab click on New Action to get started.</p> <p></p> </li> <li> <p>The first action is called \u201cfetch_status\u201d. Enter the action name     exactly as fetch_status, without square brackets. The action name     should match the AI Agent instructions provided in Configure AI     Agents Instructions.</p> <p></p> <p>Enter the following as the Action description:</p> <pre><code>Using the \"orderId\", fetch the current status of the user's order.\n</code></pre> </li> <li> <p>Under \u201cAction scope\u201d, select \u201cSlot filling with fulfillment\u201d to   indicate that a flow will be used to facilitate the action. This   ensures the AI Agent retrieves the necessary information before   executing the request.</p> </li> <li> <p>That will open the \u201cInput entities\u201d list, click on \u201c+New input   entity\u201d.</p> <p></p> </li> </ol>"},{"location":"Lab2/#step-3-configure-the-input-entities","title":"Step 3: Configure the Input Entities","text":"<p>We will now define the entities. Input Entities are the values that the AI Agent will send to the Webex Connect flow, forming the body of the JSON payload you defined in the first node of the flow setup.</p> <p>For reference, below is the image of the input that we setup in the action flow.</p> <p></p> <p>These entities represent the variables the agent needs to collect from the user. Therefore, Entity Names are important\u2014they should match the variable names used in your JSON payload to ensure proper data transmission.</p> <ol> <li> <p>Set the Entity Name to \u201corderId\u201d</p> </li> <li> <p>For orderId, since we are not setting any constraints, set the     Entity Type to String.</p> <p>Here is the Entity Description we used:</p> <pre><code>The \"orderId\" is used to fetch the user's order status from the\nconnected Order Management Platform.\n</code></pre> </li> <li> <p>Since orderId is needed for retrieving the customer record, it     must be marked as a required value.     While Entity Examples are optional, they can be helpful in     guiding the AI Agent by providing sample inputs that illustrate what     user responses might look like. This can improve the agent\u2019s ability     to recognize and extract the correct values from user interactions.     Ex:- In the image shown below, the example used is 14082221111, and is a     fake phone number. The example can be fake data, as it is used to illustrate     the format of the phone number to the AI Agent.</p> </li> <li> <p>Click Add once you\u2019re done and you\u2019ll see the Entity appear in     the list as follows:</p> <p></p> <p></p> </li> <li> <p>We will now add a second entity to pass the action name. The actionName is used     in all action flow to branch to different actions that needs to be executed.    Click on +New input entity to add a new entity.</p> <p></p> </li> <li> <p>Set the Entity Name to \u201cactionName\u201d (Note:- pay attention to case     sensitiveness).</p> <p></p> </li> <li> <p>Set the Entity Type to String.</p> <p>Set the Entity Description as below: </p><pre><code>The value is set to \"fetch_status\" when this action is called.\n</code></pre><p></p> </li> <li> <p>Select \u201cYes\u201d to mark this entity as required value. Provide entity     example as \u201cfetch_status\u201d and click Add.</p> <p></p> </li> </ol>"},{"location":"Lab2/#step-4-tie-the-action-to-the-flow","title":"Step 4: Tie the Action to the Flow","text":"<ol> <li> <p>We will now link the \u201cAction\u201d of AI Agent to the flow. Scroll down     to the \u201cWebex Connect Flow Builder Fulfillment\u201d section.</p> <p></p> <ul> <li> <p>For \u201cSelect service\u201d \u2013 select your service. The service is named Pod #(your pod number).</p> </li> <li> <p>For \u201cSelect a flow\u201d \u2013 select the flow for Pod# All Actions Flow.</p> </li> <li> <p>Click Add at the bottom to complete.</p> </li> <li> <p>The action we just added should show up in the list now.</p> </li> </ul> <p></p> </li> <li> <p>Click Save/Publish</p> </li> <li> <p>You\u2019ll then see a pop-up where you will be prompted to enter a comment that represents    the changes made to the AI Agent configuration.</p> <p></p> </li> <li> <p>Once published, preview the AI Agent to test the action and ensure     it is working as expected.</p> <p></p> </li> <li> <p>We can now preview and test the AI Agent with actions. When prompted for     \"orderId\", provide the orderId that was created in Lab 1 and should be your    phone number as instructed in Lab 1.</p> <p></p> <ul> <li> <p>Try asking for the order status in different ways to see how the AI Agent responds. This will help you assess how well it understands various phrasings and user intents.  Ex:- \"Is my order shipped?\", \"When will my order be delivered?\".</p> </li> <li> <p>If needed, you can adjust the action descriptions to fine-tune the agent's behavior. Experimenting with different prompts and tweaks will help optimize the agent's performance.</p> </li> <li> <p>Since the agent still has access to the Knowledge Base, feel free to mix Q&amp;A-style questions with action-based requests to test the complete user experience.</p> </li> </ul> </li> </ol> <p>Congratulations! \ud83c\udf89</p> <p>You have successfully created an AI Agent capable of both answering questions from a client data source and executing actions via API calls through Webex Connect.</p> <p>To build a fully functional agent, you will need to repeat the process for each additional action by following these steps:</p> <ul> <li> <p>Create the Action in AI Agent Studio</p> </li> <li> <p>Configure the Input Entities</p> </li> <li> <p>Preview and Test</p> </li> </ul> <p>We won\u2019t be covering the setup of the remaining actions in the same level of detail. Instead, we\u2019ll provide a high-level overview of the completed state for each step of every action.</p>"},{"location":"Lab2/#goal-4-build-all-the-actions-in-ai-agent-studio","title":"Goal 4: - Build all the Actions in AI Agent Studio.","text":"<p>We will now build all the actions and link the flow that we built in the earlier section.</p>"},{"location":"Lab2/#change-delivery-date-action","title":"Change Delivery Date Action","text":"<ol> <li> <p>To continue with the configuration, we need to get back to the Agent Studio.      In case you don't have the AI Agent Studio tab already opened, here is another way      to launch it.     While you are in the WxConnect, go to App     tray which is represented as          in the tool bar and click AI Agent Studio to launch the studio.</p> <p></p> </li> <li> <p>Click on the AI Agent that belongs to your Pod which was created in     the section Goal 1 \u2013 Create an AI Agent in the AI Agent Studio</p> <p></p> </li> <li> <p>In AI Agent configuration, click on \u201cActions\u201d to configure a new     Action.</p> <p></p> </li> <li> <p>When you are in AI Agent configuration, click \u201c+ New action\u201d.</p> <p></p> </li> <li> <p>Configure the new action with the following details:</p> <ul> <li> <p>Action name \u2013 change_date</p> </li> <li> <p>Action description     </p><pre><code>Collect the orderId (if not already known) and ask the user for\ntheir new preferred delivery date. The delivery date will be used to\noverwrite the \"deliveryETA\" value in this action. Note that the user\ncan change the delivery date, even if the order has already been\nshipped\n</code></pre><p></p> </li> <li> <p>Action scope \u2013 slot filling and fulfillment</p> <p></p> </li> </ul> </li> <li> <p>Let us now add a new Entity to collect the new_deliveryETA. When the     user requests to change the delivery date, the AI Agent asks the     user to provide a new delivery date which will be stored in this     Entity. Click \u201c+ New input entity\u201d under Slot filling.</p> <p></p> </li> <li> <p>Enter the following details for the new input entity</p> <ul> <li> <p>Entity name: new_deliveryETA</p> </li> <li> <p>Entity type: String</p> </li> <li> <p>Description: </p><pre><code>  The new preferred delivery date. This will replace the\n \"deliveryETA\" value.\n</code></pre><p></p> </li> <li> <p>Entity examples: you can add some examples if you prefer which allows the AI Agent to train on the format. Ex:- April 4th, April 4th, 2025 etc</p> </li> <li> <p>Required: Yes</p> </li> <li> <p>Click Add</p> </li> </ul> <p></p> </li> <li> <p>Let us add the orderId entity in case the order ID needs to be     collected. Click \u201c+ New input entity\u201d.</p> <ul> <li> <p>Entity name: orderId</p> </li> <li> <p>Entity type: String</p> </li> <li> <p>Description: </p><pre><code>The orderId of the order to be updated.\n</code></pre><p></p> </li> <li> <p>Required: Yes</p> </li> <li> <p>Click Add</p> </li> </ul> <p></p> </li> <li> <p>Let us add the actionName entity to set the action name to execute     in the flow when this action is invoked. Click \u201c+ New input entity\u201d.</p> <ul> <li> <p>Entity name: actionName</p> </li> <li> <p>Entity type: String</p> </li> <li> <p>Description: </p><pre><code>The value is set to \u201cupdate_date\u201d when this action is called.\n</code></pre><p></p> </li> <li> <p>Entity examples: update_date</p> </li> <li> <p>Required: Yes</p> </li> <li> <p>Click Add</p> </li> </ul> <p></p> </li> <li> <p>Now we will link the flow to this action under the section Webex     Connect Flow Builder Fulfillment.</p> <ul> <li> <p>Select service: The service that belongs to your Pod. Ex: - if the pod   assigned to you is 60, then the service is Pod60.</p> </li> <li> <p>Select a flow: Select the Pod# All Actions Flow that was created Step   1: Create the flow in Webex Connect section.</p> </li> </ul> <p></p> </li> <li> <p>Click Add to add the new action.</p> <p></p> </li> <li> <p>We can test this action by clicking \u201cPreview\u201d.</p> <p></p> </li> <li> <p>It\u2019s in testing that we may see an interesting response from the     Agent:</p> <p></p> <p>Sometimes, the agent may demand a date format from us, which is undesirable.</p> <p>We want to ensure that our AI Agent is flexible in accepting various date formats from users. Since we did not impose a strict format for date collection, this is a great opportunity to fine-tune our prompt for a more user-friendly and desirable outcome.</p> <p>Go back to the Agent Instructions( Go to AI Agent Studio--&gt;AI Agent--&gt;Configuration--&gt;Instructions) and add the following to the [change_date] action:</p> <pre><code>*The user can provide this date in any way, using natural language, and\nyou will be able to interpret it correctly. For example, if they say\n\"tomorrow\", then you will understand that to mean tomorrow's date. You\nwill then save this value as mm/dd/yyyy.*\n</code></pre> <p></p> <p></p> <p>This adjustment will result in a more user-friendly response and improved handling of date inputs.</p> <p>To confirm the update, do a test again by requesting the order status to verify the change in delivery date.</p> </li> </ol>"},{"location":"Lab2/#change-safezone-action","title":"Change Safezone Action","text":"<p>We will now add safe_area action.</p> <ol> <li> <p>In AI Agent configuration, click on \u201cActions\u201d to configure a new     Action.</p> <p></p> </li> <li> <p>When you are in AI Agent configuration, click \u201c+ New action\u201d.</p> <p></p> </li> <li> <p>Configure the new action with the following details:</p> <ul> <li> <p>Action name \u2013 safe_area</p> </li> <li> <p>Action description     </p><pre><code>Collect the orderId (if not already known) and use it to update the\n\"safeLocation\" value.\n\nThe user can specify or change the location where they'd like the\ncourier to leave the package when it's delivered to their home.\nTypical options may include the following:\n\n    1. Front Door  \n    2. Back Door  \n    3. Garage Door  \n    4. Neighbor's House  \n    5. Other (please ask to specify)\n\nOffer the user these options as a numerical list so that they can also\nreply with a number to correlate to their preferred safe location.\nWhen a number is entered, you'll know this to refer to the desired\nlocation and you'll update the record appropriately.\n</code></pre><p></p> <p>Take note of how we\u2019ve structured the prompt to have the AI Agent present options as a numbered list. This approach makes the interaction more user-friendly, especially for SMS-based exchanges, where single-digit responses improve the overall user experience.</p> </li> <li> <p>Action scope \u2013 slot filling and fulfillment</p> <p></p> </li> </ul> </li> <li> <p>Let us now add a new Entity to collect the new_safeLocation. When     the user requests to drop the package at a particular safe area, the     AI Agent stores in this Entity. Click \u201c+ New input entity\u201d under     Slot filling.</p> <p></p> </li> <li> <p>Enter the following details for the new input entity</p> <ul> <li> <p>Entity name: new_safeLocation</p> </li> <li> <p>Entity type: String</p> </li> <li> <p>Description: </p><pre><code>The new location that the user would like to have the\npackage left when delivered to their home. Please offer the numerical\nlist as described in the \"action description\", along with the option\nto specify any safe location they would like.\n</code></pre><p></p> </li> <li> <p>Required: Yes</p> </li> <li> <p>Click Add</p> <p></p> </li> </ul> </li> <li> <p>Let us add the orderId entity in case the order ID needs to be     collected. Click \u201c+ New input entity\u201d.</p> <ul> <li> <p>Entity name: orderId</p> </li> <li> <p>Entity type: String</p> </li> <li> <p>Description: </p><pre><code> The orderId of the order to be updated.\n</code></pre><p></p> </li> <li> <p>Required: Yes</p> </li> <li> <p>Click Add</p> <p></p> </li> </ul> </li> <li> <p>Let us add the actionName entity to set the action name to execute     in the flow when this action is invoked. Click \u201c+ New input entity\u201d.</p> <ul> <li> <p>Entity name: actionName</p> </li> <li> <p>Entity type: String</p> </li> <li> <p>Description: </p><pre><code>The value is set to \u201csafe_area\u201d when this action is called.\n</code></pre><p></p> </li> <li> <p>Entity examples: safe_area</p> </li> <li> <p>Required: Yes</p> </li> <li> <p>Click Add</p> <p></p> </li> </ul> </li> <li> <p>Now we will link the flow to this action under the section Webex     Connect Flow Builder Fulfillment.</p> <ul> <li> <p>Select service: The service that belongs to your Pod. Ex: - if the pod   assigned to you is 60, then the service is Pod60.</p> </li> <li> <p>Select a flow: Select the Pod# All Actions Flow that was created Step1: Create the flow in Webex Connect section.</p> <p></p> </li> </ul> </li> <li> <p>Click Add to add the new action.</p> <p></p> </li> <li> <p>We can test this action by clicking \u201cPreview\u201d.</p> <p></p> </li> </ol>"},{"location":"Lab2/#cancel-order-action","title":"Cancel Order Action","text":"<p>We will now add cancel_order action.</p> <ol> <li> <p>In AI Agent configuration, click on \u201cActions\u201d to configure a new     Action.</p> <p></p> </li> <li> <p>When you are in AI Agent configuration, click \u201c+ New action\u201d.</p> <p></p> </li> <li> <p>Configure the new action with the following details:</p> <ul> <li> <p>Action name \u2013 cancel_order</p> </li> <li> <p>Action description     </p><pre><code>Collect the orderId (if not already known) and use it to update the\n\"deliveryStatus\" value. The action will first perform a check to see\nwhat the order status is (if not already known) - if the delivery\nstatus (\"deliveryStatus\") value is \"shipped\", then the order can't be\ncancelled and the user needs to be put in touch with a human expert on\nthe number &lt;INSERT YOUR OWN WXCC TELEPHONE NUMBER&gt; THAT WAS ASSIGNED\nTO YOU&gt;**. However, for any other status, regardless of what it is,\nthe order can be cancelled.\n</code></pre> Note:- Modify the above text to replace &lt;INSERT YOUR OWN WXCC TELEPHONE NUMBER&gt;     with the telephone number assigned to your pod.<p></p> </li> <li> <p>Action scope \u2013 slot filling and fulfillment</p> <p></p> </li> </ul> </li> <li> <p>Let us now add a new Entity to collect the orderId. When the user     requests to drop the package at a particular safe area, the AI Agent     stores in this Entity. Click \u201c+ New input entity\u201d under Slot     filling.</p> <p></p> </li> <li> <p>Let us add the orderId entity in case the order ID needs to be     collected. Click \u201c+ New input entity\u201d.</p> <ul> <li> <p>Entity name: orderId</p> </li> <li> <p>Entity type: String</p> </li> <li> <p>Description: </p><pre><code>The orderId of the order to be cancelled.\n</code></pre><p></p> </li> <li> <p>Required: Yes</p> </li> <li> <p>Click Add</p> <p></p> </li> </ul> </li> <li> <p>Let us add the actionName entity to set the action name to execute     in the flow when this action is invoked. Click \u201c+ New input entity\u201d.</p> <ul> <li> <p>Entity name: actionName</p> </li> <li> <p>Entity type: String</p> </li> <li> <p>Description: </p><pre><code>The value is set to \u201ccancel_order\u201d when this action is called.\n</code></pre><p></p> </li> <li> <p>Entity examples: cancel_order</p> </li> <li> <p>Required: Yes</p> </li> <li> <p>Click Add</p> <p></p> </li> </ul> </li> <li> <p>Now we will link the flow to this action under the section Webex     Connect Flow Builder Fulfillment.</p> <ul> <li> <p>Select service: The service that belongs to your Pod. Ex: - if the pod   assigned to you is 60, then the service is Pod60.</p> </li> <li> <p>Select a flow: Select the Pod# All Actions Flow that was created Step1: Create the flow in Webex Connect section.</p> <p></p> </li> </ul> </li> <li> <p>Click Add to add the new action.</p> <p></p> </li> <li> <p>We can test this action by clicking \u201cPreview\u201d.</p> <p></p> <p></p> <p>In the example shown above in step #9, the delivery status is set to \u201cshipped\u201d.  With the delivery status is set to \"shipped\" the AI Agent will always inform the  customer that the order cannot be canceled and will provide the appropriate contact  number for further assistance.</p> <p>This mechanism also serves as a built-in escalation path to a human agent, entirely handled through prompting, without requiring additional flow logic.</p> <p>Verifying the Action Flow:</p> <p>To test the cancellation process for \"Not Shipped\" status, use Update CRM (process can  be found in Lab 1 guide CRM Setup) to  manually set the deliveryStatus variable to \"Not shipped\u201d.</p> <p>Once updated, the AI Agent will recognize the change and proceed to cancel the order, updating the status to CANCELLED accordingly.</p> <p>Please click \u201cPublish\u201d to publish the AI Agent. When prompted, include a  comment summarizing the updates made to this version of the AI Agent and  proceed to deploy it to production</p> </li> </ol> <p>That concludes Agent Actions and the AI Agent Studio portion of this lab. \ud83d\ude80</p> <p>Next, we will focus on simplifying the final flow from Lab 1 to:</p> <ul> <li>Integrate the AI Agent to streamline the building process</li> </ul> <p>Now, let\u2019s head back over to Webex Connect to continue!</p>"},{"location":"Lab2/#goal-5-integrate-the-ai-agent-into-the-flow","title":"Goal 5: - Integrate the AI Agent into the flow.","text":"<p>At the end of this goal, you will realize the importance of AI Agent in simplifying the workflows. It allows the brands to move from a structured workflow which requires you to capture and program all paths of interaction to meet the required customer experience to have an unstructured flow with AI Agent. It is also important to understand that AI Agent is not to be deployed once and forgotten. It is important to review the sessions to understand the conversation failures and enhance the instructions to add the required guardrails or modify the language to meet the needs.</p> <p>We are now going to modify the flow we built in Lab 1 and incorporate Ai Agent into this flow. In order to use the time efficiently, there is a Lab 2 starter flow provided in your Pod service, and we will use this flow to copy a new flow and change few settings before putting into production.</p> <ol> <li> <p>Login to control hub at https://admin.webex.com and launch Webex     connect quick link.</p> <p></p> </li> <li> <p>Find the service that belongs to your Pod and click on it to get     started.</p> <p></p> </li> <li> <p>Go to flows and click on Create Flow.</p> <p></p> </li> <li> <p>In create flow window enter the following details:</p> <ul> <li> <p>Flow Name: Pod# Lab2 AI Agent (substitute # with your Pod number. Ex: - in the image below, the Pod# is 60 and hence the flow is named Pod60 Lab2 AI Agent).</p> </li> <li> <p>Method: Copy from existing flow.</p> </li> <li> <p>Select Flow: Lab 2 starter flow.</p> </li> <li> <p>Click \u201cCreate\u201d.</p> <p></p> </li> </ul> </li> <li> <p>Configure webhook window appears. We are going to create a new     webhook for Lab2.</p> <ul> <li> <p>Under Configure webhook settings to trigger this flow</p> </li> <li> <p>Create new event.</p> </li> <li> <p>Name \u2013 Pod# Lab2 AI Agent Trigger Ex: - For Pod 60, name is Pod60 AI     Agent.</p> </li> <li> <p>Example Data: Use the below JSON payload.     </p><pre><code>{\n\n\"orderId\": \"\"\n\n}\n</code></pre><p></p> </li> <li> <p>Click Parse to parse orderId as a variable.</p> </li> <li> <p>Click Save.</p> <p></p> <p></p> </li> </ul> </li> <li> <p>We now need to modify the SMS nodes to add the sms number. In the     below flow, there are three SMS nodes identified. Open the SMS node     marked as 1 by clicking on it.</p> <p></p> </li> <li> <p>The SMS configuration window opens and check the \u201cFrom Number\u201d, it     is blank, and we will select the dynamic variable \"yourAssignedSMSNumber\" that     stores the SMS number.</p> <p></p> <p>Click on the \u201cFrom Number\u201d and select \u201cyourAssignedSMSNumber\u201d variable from the drop down under Custom Variables and click \u201cSave\u201d.</p> <p></p> </li> <li> <p>Repeat the steps to complete the configuration for SMS nodes #2 and     #3.</p> </li> <li> <p>Next, we will verify the Receive node is configured. There is only     one Receive node in the flow that is highlighted. Open the receive     node and click save even if the node is configured correctly.</p> <p></p> <p>If the Receive node Number is blank, click on the Number field and select \u201cyourAssignedSMSNumber\u201d variable from the Custom Variables drop down. Select \u201c*\u201d for the keyword and click Save.</p> <p></p> </li> <li> <p>Next, we are going to modify the AI Agent nodes in the flow. There     are two AI Agent nodes in the below flow that needs to be modified.</p> <p></p> <p>Open the AI Agent node #1 to modify. Click the AGENT field and in the drop down pick the AI Agent name that we configured in \u201c Goal 1 \u2013 Create an AI Agent in the AI Agent Studio\u201d. Ex: - The pod assigned below is 60, so the AI Agent picked is Pod60 AI Agent.</p> <p>Click Save to complete.</p> <p></p> </li> <li> <p>Repeat the steps for AI Agent node #2, the completed node     configuration of AI Agent node #2 is shown below. Click Save.</p> <p></p> </li> <li> <p>All the configuration changes for this flow are complete. Click     \u201cMake Live\u201d to put the flow into production. The Make Live     configuration window appears as shown below.</p> <p></p> <p></p> </li> <li> <p>Click Make live again to put the flow in Production.</p> </li> </ol>"},{"location":"Lab2/#goal-6-testing-the-ai-agent","title":"Goal 6 \u2013 Testing the AI Agent","text":"<p>It is now time to test the flow that we put in production. The flow that we built is triggered by certain notifications from the CRM or system of record updates as a proactive notifications. We will simulate this by creating this notification and keep your mobile phones ready, let us begin testing.</p> <ol> <li> <p>Open a web browser and login to http://crm.cxocoe.us with the     provided credentials.</p> </li> <li> <p>Click on \u201cUpdate CRM Data\u201d</p> <p></p> <p>The field to update is Delivery Status and the value is \u201cNot shipped\u201d. Then click \u201cUpdate Record\u201d.</p> </li> <li> <p>Open the flow that was put into production in Goal 5 step #13 and double click on the     first node \u201cConfigure Webhook\u201d.</p> <p></p> <p>In the configuration window, locate the field named \u201cWebhook URL\u201d and the url is of the format https://hooks.us.webexconnect.io/events/XXXXXXXXX. Copy the last part of the URL \u201cXXXXXXXXXX\u201d to test.</p> <p></p> </li> <li> <p>If you don't have the CRM page open, click open a web browser and login      to CRM with the credentials provided.</p> <p></p> </li> <li> <p>Click on \u201cKick off Proactive Flow\u201d.</p> <p></p> <ul> <li> <p>Phone Number: Enter your mobile number with country code. Ex: - 14081111111</p> </li> <li> <p>Webhook Id: Enter the copied text from step #3</p> </li> </ul> <p>Then click on \u201cStart Flow\u201d to trigger the proactive journey.</p> <p></p> </li> <li> <p>The webex connect flows provide debug capability to identify any issues with the     configuration. Login into webex connect and open the flow, the debug can be accessed      by clicking on bug icon that is located on the right of the flow.</p> <p></p> <p>The debug window contains list of transaction id\u2019s that the flow has executed. Click on the appropriate transaction id to debug.</p> <p></p> <p>The debug output is encrypted by default. Click \u201cDecrypt Logs\u201d to view the logs in plain text.</p> <p></p> </li> <li> <p>Follow the prompts to test the following.</p> <ul> <li>change the delivery date.</li> <li>Update delivery location.</li> </ul> <p>Observe the confirmation notifications received for each of these tests.</p> </li> <li> <p>Open a web browser and login to http://crm.cxocoe.us with the     provided credentials.</p> </li> <li> <p>Click on \u201cUpdate CRM Data\u201d</p> <p></p> <p>In the field to update dropdown, select \"Delivery Status\" and in the new value box, enter \"shipped\u201d. Then click \u201cUpdate Record\u201d button.</p> </li> <li> <p>Let us retest by following step #5</p> <p></p> <ul> <li> <p>Phone Number: Enter your mobile number with country code. Ex: - 14081111111</p> </li> <li> <p>Webhook Id: Enter the copied text from step #3</p> </li> </ul> <p>Then click on \u201cStart Flow\u201d to trigger the proactive journey.</p> </li> <li> <p>You will receive an order status notification on your mobile device.      Respond to the message in your own words to initiate the order cancellation.</p> </li> <li> <p>You should receive a notification prompting you to contact the customer     support hotline to proceed with the cancellation. Since we marked your order as     \"shipped\" a few steps ago, the request to cancellation is denied by the AI Agent and     the call is transferred to human agent to assist the customer and hopefully prevent     the customer from cancelling the order. </p> <p>The following screenshots show examples of the notifications you may receive during the \"change in delivery date\" and \"order cancellation\" tests. </p> </li> <li> <p>Order cancellation with the delivery status set to \"shipped\"      is the final step before moving on to Lab 3. </p> </li> </ol>"},{"location":"Lab2/#comparison-of-structured-flow-vs-ai-agent","title":"Comparison of Structured flow vs AI Agent","text":"<p>Let us know compare the flow that was created for Lab 1 vs Lab 2 to understand the advantages of AI Agent to handle an unstructured conversation and its impact on the brand.</p> <p>Here is the flow we built for Lab 1</p> <p></p> <p>And now below is the flow we built for lab 2 with AI Agent.</p> <p></p> <p>Even though we are able to provide similar brand experience for our customers, AI Agent with its ability to handle unstructured flow can prove beneficial for the brands to service the customers more efficiently and in a timely manner without having to program all the communication paths like in structured conversation.</p> <p>This is an example of Cisco Autonomous AI Agent which is based on \u201cGenerative AI\u201d technology, but if brands prefer to leverage a more structured SelfService AI Agent, Cisco is also positioned to provide this solution using \u201cScripted AI Agent\u201d. </p> <p>\ud83d\udc4f\ud83d\udc4fCongratulations!! This concludes Lab 2.\ud83d\udc4f\ud83d\udc4f</p>"},{"location":"Lab3/","title":"Lab 3 - Human Agent","text":""},{"location":"Lab3/#lab-3-human-agents","title":"LAB 3: - Human Agents","text":""},{"location":"Lab3/#about-this-lab","title":"About this lab","text":"<p>Humans play a key role when CX is at risk. Therefore, they need to be both leveraged efficiently and only when absolutely needed but they are a strong option as well. They also must be equipped with the tools needed to be effective since they are the ultimate safety net for the end-user. Human support remains important for providing an authentic and empathetic customer experience, which is needed for fostering customer loyalty and building long-term relationship. Companies should strike a balance by leveraging AI Agents for routine inquiries and ensuring a smooth transition to human agents for complex issues.</p> <p>Supporting human agents with training, tools, and customer data, prioritizing the overall customer experience, and using technology to enhance human interactions can help deliver excellent customer service and build long-term customer relationships.</p>"},{"location":"Lab3/#lab-objective","title":"Lab Objective","text":"<p>In this lab, we are concentrating on the third pillar Human Agents.</p> <p>Upon completion of this lab, you will be able to: -</p> <ul> <li> <p>Verify Webex Contact center sandbox configuration.</p> </li> <li> <p>Set up team and call drop queue to simulate call drop to deliver call   drop summarization for the next agent.</p> </li> <li> <p>Verify call recording is enabled at the tenant level for Topic   Analytics</p> </li> <li> <p>Enable webRTC for agent and supervisor call delivery.</p> </li> <li> <p>Create connectors to access Webex contact center API\u2019s within flow   builder.</p> </li> <li> <p>Enable Cisco AI assistant and features.</p> </li> <li> <p>Change the default layout to bootcamp layout to enable Cisco AI   assistant and JDS.</p> </li> <li> <p>Import a new flow to deliver the customer call to an agent to process   order cancellation.</p> </li> <li> <p>Test the flow by delivering the call to agent.</p> </li> <li> <p>Transfer the active call to call drop summary queue to simulate call   drop.</p> </li> <li> <p>Re-test by calling again and going through self-service using AI Agent   configured in lab 2.</p> </li> <li> <p>Verify Virtual agent transfer summary and call drop summary of the   previous interactions delivered to the agent.</p> </li> </ul>"},{"location":"Lab3/#background","title":"Background","text":"<p>Lab 3 focuses on one of the most important pillars of the customer experience portfolio, the human agents. Here we will be exploring the various AI aspects to increase the efficiency of human agents to better serve the customers quickly and efficiently. This will help business increase their brand value while reducing the operations cost by leveraging the existing workforce to solve customer needs much quicker.</p> <p>By leveraging the proactive journey and Ai Agents, we hope to provide better self-service capabilities for our customers. The best customer experience is to provide self-service when you can and escalate to human agents when needed. This makes the interactions that gets escalated to human agents more complex and it is important to provide human agents the required tools to ensure they provide the best possible service, but in a quick and a very efficient way.</p>"},{"location":"Lab3/#ai-assistant","title":"AI Assistant","text":"<p>AI Assistant revolutionizes customer service by enhancing your efficiency and elevating customer satisfaction.</p> <p>The AI Assistant currently provides the following features:</p> <ol> <li> <p>AI-generated call summaries \u2013 Agents can now handle customer   conversations better with AI-generated summaries.</p> <ul> <li> <p>AI-generated summaries for dropped calls: If a call gets disconnected     unexpectedly, the Cisco AI Assistant instantly creates a summary of     the conversation. When the customer calls back, the next agent can     seamlessly continue the conversation, saving time and enhancing the     customer experience.</p> </li> <li> <p>Virtual agent transfer summaries: Provides the comprehensive summaries     of interactions with virtual agents, ensuring the agents have all the     information needed to assist customers quickly and efficiently. This     means less repetition for customers and faster resolutions.</p> </li> </ul> </li> <li> <p>AI-powered Agent Wellbeing - AI-powered Agent Wellbeing features     are designed to support Agents\u2019 wellbeing, enhance productivity, and     customer satisfaction. Using advanced analytics, the Webex Contact     Center platform harnesses\u202fend-to-end data insights to monitor and     detect agents' stress levels in real-time. Using the real-time     insights, the system provides\u202fautomated wellbeing breaks\u202fwhen needed,     helping agents manage stress effectively, sustain high performance,     and deliver exceptional customer experiences.</p> </li> <li> <p>Auto CSAT - Auto CSAT forecasts customer satisfaction (CSAT) after     each interaction, helping contact centers gain insights and make     decisions to boost customer satisfaction and agent performance. CSAT     is crucial for understanding customer happiness with service. Cisco's     proprietary models use operational data, interaction transcripts, and     surveys to predict CSAT scores accurately. These scores can identify     training needs, select calls for review, and ensure swift resolution     for dissatisfied customers.</p> </li> <li> <p>Topic Analytics \u2013 AI-powered Topic Analysis capability provides     insights into the key reasons customers are calling into the contact     center by collecting and analyzing interaction data and extracting     trends. This capability, using large language models (LLMs), helps the     organization to identify the top call drivers and probably use that as     a first step towards self-service leveraging AI Agents.</p> </li> <li> <p>Real-time transcripts for Agents - The real-time transcription feature      provides agents with a live, continuously updated transcript of customer      conversations directly within the Agent Desktop. This ensures that every      spoken word is accurately captured in real time, reducing the risk of      missed details and misunderstandings. Agents can follow along effortlessly      without the need for manual note-taking, allowing them to stay fully engaged      in the conversation.</p> </li> </ol> <p>As part of this lab, we will only be testing the AI-generated call   summaries because the other AI features rely on data to train and   model which we don\u2019t have in our lab sandbox.</p> <p>Now let us begin with the lab.</p>"},{"location":"Lab3/#goal-1-verify-wxcc-configuration","title":"Goal 1 \u2013 Verify WxCC Configuration.","text":"<ol> <li> <p>Login to the control hub using URL     https://admin.webex.com and login with     the provided admin username and password. The format of the username     is admin#@ciscolivelab.wbx.ai, where # is your pod #. Ex: - if     the assigned pod is 60, the admin username is     admin60@ciscolivelab.wbx.ai</p> <p>Upon successful login, you are now in Contact Center landing page as shown below.</p> <p></p> <p>Please ignore the error message at the bottom right. This is only indicating limited admin rights.</p> </li> <li> <p>Next click on \u201cContact Center\u201d and click on \u201cChannels\u201d.</p> <p></p> </li> <li> <p>Using the search type in your Pod#, ex: - If you are assigned Pod     60, type pod60 or alternatively you can find it in the list.</p> <p></p> </li> <li> <p>Click on the     Pod#_EP# that belongs to your pod and note the support number that     is assigned to the entry point. This will be the number to dial into     the contact center and verify that the \u201cTelephone Number\u201d that you     received along with your pod credentials is same as this number.</p> <p></p> </li> <li> <p>Let us now verify the configuration of the team and queue. Click on     \u201cTeams\u201d from the contact center main menu. In the search bar, type     in your Pod# and the team displayed with the filter.</p> <p></p> <p>Click on your team and validate the agent, supervisor and admin accounts that are assigned to the team belong to your Pod# .</p> <p></p> </li> <li> <p>Next, we will verify the queue configuration. Click on Queue and in     the search bar type in your pod# to display your queue.</p> <p></p> <p>Click on the queue to open the configuration.</p> <p></p> </li> <li> <p>In the \u201cContact Routing Settings\u201d section, click the Pencil icon     under the Actions Column in the Group Details and type in your pod#.     There should be a blue tick to indicate the team assignment to this     queue.</p> <p></p> <p></p> </li> <li> <p>Next, let us look at AI Assistant to observe the features that are     enabled. Click on AI Assistant within the contact center main menu     and observe the features enabled. For Agent Wellbeing and Auto CSAT,     you can select all agents to be included, or you can limit this to     certain group of individuals.</p> <p></p> <p></p> </li> <li> <p>Auto CSAT feature modeling is dependent on call recording and CSAT     based survey responses. It uses the data from the CSAT survey scores     to train the model to generate Auto CSAT scores. We have created a     survey and mapped it to the Auto CSAT. This can be observed by     clicking on Manage questions within Auto CSAT section of AI     Assistant.</p> <p></p> </li> </ol>"},{"location":"Lab3/#goal-2-wxcc-flow-configuration","title":"Goal 2 \u2013 WxCC Flow Configuration.","text":"<p>In this section we will look at Webex Contact Center flow. We are not going to build the flow from start to finish, instead we will just copy an existing flow and modify the AI Agent node to include the AI Agent that we created in Lab 2.</p> <ol> <li> <p>From the contact center menu, click on Flows and find the flow that     is named</p> <p>CiscoLive_WxCC_Flow.</p> <p></p> </li> <li> <p>We will now make a Copy of this flow and modify it. To copy click on     three dots      at the end of the CiscoLive_WxCC_Flow.</p> <p></p> <p></p> </li> <li> <p>Click copy to make a copy of the flow. Wait for few secs for the     copy of the flow to show up in the list.</p> <p></p> </li> <li> <p>Click on      at the end of the flow that starts with copy. If there are multiple     flow names that start with \u201cCopy_\u201d , find the one that is \u201cLast     edited by\u201d your admin account name.</p> <p></p> <p></p> </li> <li> <p>When the flow opens, you may be presented with \u201cDiscover New     Features\u201d, you can click \u201cGet Started\u201d to start modifying the flow.</p> </li> <li> <p>At first, we will put the flow in edit mode to start our edits. To     do so click the \u201cEdit\u201d toggle which can found next to the flow name.</p> <p></p> <p></p> </li> <li> <p>Click the      next to the flow name and click Edit Name. Change the flow name to     Pod#_Flow where # is your pod number. Ex: If the pod assigned to     you 60, the flow name is Pod60_Flow.</p> <p></p> <p></p> <p></p> <p>Click Save.</p> </li> <li> <p>We will now modify the aiAgent labeled node to include the AI Agent     that we built in lab 2. Click on the node that is labeled aiAgent.</p> <p></p> </li> <li> <p>The configuration settings for the node will be displayed on the     right of the screen. In case the configuration window doesn\u2019t     appear, click on the node and click the icon          next to the search flow and the settings window will appear.</p> <p></p> </li> <li> <p>In the aiAgent settings, change the Virtual Agent to the virtual     agent that was configured for your Pod in Lab 2. This is a drop     down, so please select your virtual agent from the drop down.</p> <p></p> </li> <li> <p>We now need to modify the Queue node to change the Queue target to     your Pod. Click on QueueCall node in the flow.</p> <p></p> </li> <li> <p>The configuration settings for the node will be displayed on the     right of the screen. In case the configuration window doesn\u2019t     appear, click on the node and click the icon          next to the search flow and the settings window will appear.</p> <p></p> </li> <li> <p>In the QueueCall settings, in the Contact Handling section, change     the Queue to your pod queue by clicking on the drop down.</p> <p></p> <p></p> <p></p> </li> <li> <p>When your changes are done, save the flow by clicking on the Save     button. The save button will appear only if \u201cAuto Save\u201d is disabled.     Auto save automatically saves the flow.</p> <p></p> </li> <li> <p>We are done with the changes and to make it live, toggle the     validation button for error checking.The errors detected in      the flow will be displayed in \"red\" text in validation check. The     errors need to be fixed to successfully save the flow.     The \"yellow\" text items are recommendations and can be ignored.</p> <p></p> </li> <li> <p>Now click the \u201cPublish flow\u201d to put the flow in production.</p> <p></p> </li> <li> <p>Publish Flow screen appears. This allows you to add version labels     to build a lifecycle of the flow through various phases such as     development, test, and live. Instead of applying changes directly to     the flow, you can publish the flow through phases before you deploy     the flow to the production. This feature helps you avoid overwriting     of your current flow in the production.</p> <p>For this lab, we will leave the version label as \u201clatest\u201d which is default and is automatically added. Click Publish Flow again.</p> <p></p> </li> <li> <p>The flow is now published.</p> <p></p> </li> <li> <p>We can close the flow designer and link the flow to your voice     channel.</p> </li> <li> <p>Go back to control hub using the https://admin.webex.com and login     with the admin username and password.</p> </li> <li> <p>Click on Channels in the contact center menu. In the search under     the channels, type your pod number to narrow down the list to your     channel name.</p> <p></p> </li> <li> <p>Click on your channel to open the configuration window and go to the     Entry Point Settings section.</p> <p></p> <ul> <li> <p>Routing Flow: Select the flow for your pod from the drop down.</p> </li> <li> <p>Version Label: Select the \u201clatest\u201d version label.</p> </li> <li> <p>Music on Hold: Select a music on hold file from the list.</p> </li> <li> <p>Click Save</p> </li> </ul> <p></p> </li> </ol> <p>We are now ready to begin our testing of Lab 3.</p>"},{"location":"Lab3/#goal-3-testing","title":"Goal 3 - Testing.","text":""},{"location":"Lab3/#background_1","title":"Background","text":"<p>We are now ready to test the flow that was created. The agents logging in will use webRTC for the voice calls and when the customer call is delivered to the agent, we will verify the information that is presented. As the customer navigates through the brand experience, journey data is checked to understand the customer journey. We will simulate a system call drop. After the call gets dropped, another call is placed and this time the customer interacts with the Ai agent and then escalates the call to the human agent. When the call is presented on the agent desktop, Virtual agent transcript, virtual agent transfer summary and call drop summary is presented for this call.</p> <ol> <li> <p>Open a web browser and go to Desktop     URL.</p> </li> <li> <p>Login with the provided agent credentials.</p> </li> <li> <p>In the station credentials screen, select Desktop as the telephony option     and select the team that belongs to your pod. Then click submit.</p> <p></p> </li> <li> <p>Since this is the first time the agent is logging in, Emergency     Service Notification disclaimer is presented. Check the box for \u201cI     have read the notification\u201d and click Continue.</p> <p></p> </li> <li> <p>When you login for the first time using webRTC, if you get a warning     message to allow microphone, select allow.</p> <p></p> </li> <li> <p>When successfully connected to webRTC, you will see \u201cDesktop     telephony connected successfully status message. The desktop is now     ready to handle incoming calls.</p> <p></p> </li> <li> <p>We can now call in. Dial the telephone number that was assigned to     you. This is number can also be found from Goal 1 \u2013 Verify WxCC     Configuration. Step# 4.</p> </li> <li> <p>You will be greeted with the below greeting.</p> <p>\u201cHello, \\&lt;first name&gt; \\&lt;last name&gt;. Thank you for calling. Please note, we have an active order for \\&lt;product name&gt; associated with your account. Your order ID is \\&lt;order id&gt;. If you are enquiring about \\&lt;order id&gt;, press 1. For assistance with a different matter, press 2.\u201d</p> <p>Press 1 to enquire about your existing order.</p> </li> <li> <p>The next prompt will inform you about your SMS interaction (as     completed in lab 2). You should hear the prompt \u201cOur records show     that you recently interacted with us via SMS and requested to cancel     your order with Order ID \\&lt;order id&gt;. To confirm if you wish to     cancel this order, press 1. If you\u2019d like to speak with a     representative press 2\u201d.</p> </li> <li> <p>Press 1 to cancel the order.</p> </li> <li> <p>At this step, if you hear a different message other than the above     message with option to cancel, it is because the last step in lab 2     was not to cancel order. please check the output from JDS since the     last step in lab 2 is to cancel the order.</p> </li> <li> <p>If the delivery status is set to \u201cshipped\u201d, you will hear the     message, \u201cThank you for your patience. Since the status of your     order shows as 'Shipped,' you'll need to speak with a representative     to proceed with the cancellation. Please hold for the next available     representative\u201d. If the delivery status is set to anything other     than \u201cshipped\u201d status, you will hear the message \u201cThank you for your     patience. Please hold for the next available representative\u201d.</p> </li> <li> <p>You will hear the hold music followed by the queue message \u201cThank     you for holding. Your call is important to us, and a representative     will be with you shortly. Please continue to hold, and we appreciate     your patience\u201d.</p> </li> <li> <p>On the agent desktop, set the agent status to \u201cAvailable\u201d state.</p> <p></p> <p></p> </li> <li> <p>If the agent is logged into the appropriate team, the call should be     delivered to the agent. Please refer to the incoming pop over for     the call information. A screen pop of cisco.com webpage is delivered when the call     is delivered to the agent. The screen pop can be closed or tab over to the agent desktop     to continue further.</p> <p></p> </li> <li> <p>Click Answer, to answer the call.</p> <p></p> </li> <li> <p>When the call is answered, observe the agent desktop interaction     control pane for the call information details.</p> <p></p> </li> <li> <p>The customer journey widget will show the customer journey.</p> <p></p> </li> <li> <p>Expand on an interaction in the customer journey widget to view the     details.</p> <p></p> <p></p> </li> <li> <p>Pretend to be the customer and have a conversation with the agent     regarding the product or cancellation policy for about 30secs.</p> </li> <li> <p>Click on Live Transcript and observe the real time transcription of the conversation.</p> <p></p> </li> <li> <p>We will now simulate a system call drop by transferring the call to     a queue that will drop after 15secs.</p> </li> <li> <p>While the call is active on the agent desktop, click on the transfer     button.</p> <p></p> </li> <li> <p>In the transfer request window, select the radio button next to     Queue.</p> <p></p> </li> <li> <p>Hit the drop-down selection to choose from the list of queues and     select \u201cCall drop summary-Q\u201d</p> <p></p> <p></p> </li> <li> <p>Click on transfer to complete the call transfer.</p> <p></p> </li> <li> <p>Select the wrap up reason to complete the call.</p> <p></p> </li> <li> <p>Dial the number again</p> </li> <li> <p>You will be greeted with the below greeting.</p> <p>\u201cHello, \\&lt;first name&gt; \\&lt;last name&gt;. Thank you for calling. Please note, we have an active order for \\&lt;product name&gt; associated with your account. Your order ID is \\&lt;order id&gt;. If you are enquiring about \\&lt;order id&gt;, press 1. For assistance with a different matter, press 2.\u201d</p> <p>This time Press 2 for different matter.</p> </li> <li> <p>You will hear the welcome message configured for your Ai Agent     within the Ai agent studio. Have a conversation with the Ai Agent based      on the agent\u2019s goal defined in lab 2. Ex:- What is the status of my order?</p> <p></p> </li> <li> <p>Ask the Ai Agent to transfer to the call to an agent.</p> </li> <li> <p>If the agent is logged into the appropriate team, the call should be     delivered to the agent. Click Answer button to answer the call.</p> </li> <li> <p>When the call is answered, the transcript from the Ai Agent is     delivered to the agent desktop.</p> <p></p> </li> <li> <p>When the call is answered, Cisco Ai Assistant pops up with virtual     agent transfer summary, and the call drop summary of the previous     disconnected call.</p> <p></p> </li> <li> <p>We are done servicing the customer and the agent disconnects the     call to transfer the customer to post call survey. From the agent desktop,      click the End button to end the call. The customer should hear the survey option,      \"Please select a rating from 1-5 for CSAT\", using the keypad of the telephone, press      the corresponding # to complete the survey.</p> <p></p> </li> <li> <p>On the agent desktop, select the appropriate wrap-up reason code to     clear the call.</p> </li> <li> <p>The survey results take upto 24 hours to show up within the control     hub.</p> </li> <li> <p>To downloas the survey results, login to control hub using your admin username and password,     navigate to Contact Center.</p> </li> <li> <p>From the contact center main menu, click on surveys. The responses     column will show the number of surveys completed. The survey results     can be viewed by clicking the download button.</p> <p></p> </li> <li> <p>Auto CSAT gets populated in Supervisor Desktop when it has     sufficient data modeling available to show the Auto CSAT scores.     Sign out of your agent desktop or open a incognito windos and login to the      supervisor desktop using URL Supervisor Desktop</p> <p>Use the supervisor login and password to login.</p> <p>At the station credentials pop up, select supervisor as the role and select desktop for the telephony option.</p> <p></p> </li> <li> <p>When logged in, navigate to the recordings widget on the left pane     of the supervisor desktop.</p> <p></p> </li> <li> <p>Adjust the date filter to show the recordings. Note the Auto CSAR     column is blank and this is expected since there isn\u2019t sufficient     data available for Auto CSAT to populate.</p> <p></p> <p>Congratulations!! This concludes Lab 3.</p> <p>Thank you for your participation. Your feedback helps us get better. Click the link below to complete the survey </p> <p>CLICK HERE FOR SURVEY</p> </li> </ol>"},{"location":"conclusion/","title":"Related Sessions at Cisco Live","text":""},{"location":"conclusion/#related-sessions-at-cisco-live","title":"Related Sessions at Cisco Live","text":"<ul> <li>BRKXXX-1111 My friend's breakout session</li> </ul>"},{"location":"kb/","title":"Knowledge Base","text":""},{"location":"kb/#product-information-core-trio-qi-charger","title":"Product Information: Core Trio QI Charger","text":"<p>Overview: The Core Trio QI Charger is the ultimate travel companion for seamless and efficient charging. With its 3-in-1 design, it simplifies your charging experience by offering a sleek, compact, and powerful solution. The charger is designed to eliminate the hassle of tangled cords while providing compatibility with multiple devices.</p> <p>Specifications:</p> <ul> <li> <p>Charging Pads:</p> </li> <li> <p>15W magnetic pad for smartphones and other mobile devices, ensuring     fast and efficient charging.</p> </li> <li> <p>5W charging pad for AirPods or any second wireless-enabled device.</p> </li> <li> <p>Built-in Apple\u00ae Watch charger for convenient, cable-free charging of     your smartwatch.</p> </li> <li> <p>Compatibility:</p> </li> <li> <p>Compatible with all Qi-enabled devices, including smartphones,     earbuds, and smartwatches.</p> </li> <li> <p>Works seamlessly with Apple\u00ae, Samsung\u00ae, and other leading brands.</p> </li> <li> <p>Design:</p> </li> <li> <p>Compact and lightweight for easy portability, perfect for travel or     home use.</p> </li> <li> <p>Anti-slip surface to securely hold your devices during charging.</p> </li> <li> <p>Minimalist white finish to complement any space.</p> </li> <li> <p>Safety Features:</p> </li> <li> <p>Overcharge protection to prevent battery damage.</p> </li> <li> <p>Temperature control and short-circuit protection.</p> </li> </ul> <p>Warning: This product contains chemicals known to the state of California to cause cancer, birth defects, or other reproductive harm. For more information, please visit California Prop 65 Warning.</p> <p>FAQs:</p> <ol> <li> <p>What devices are compatible with the Core Trio QI Charger? The     charger is compatible with all Qi-enabled devices, including     smartphones, earbuds, and smartwatches from major brands like Apple\u00ae     and Samsung\u00ae.</p> </li> <li> <p>Does the Core Trio QI Charger support fast charging? Yes, the     15W magnetic pad supports fast charging for mobile devices that are     compatible with this feature.</p> </li> <li> <p>Can I use the Core Trio QI Charger internationally? The charger     is designed to work with standard USB power adapters. Be sure to use     an adapter compatible with the voltage and plug type of your     destination.</p> </li> <li> <p>What should I do if my device is not charging properly?</p> <ul> <li> <p>Ensure your device is Qi-enabled.</p> </li> <li> <p>Check for obstructions, such as thick cases or metallic items,   that might interfere with wireless charging.</p> </li> <li> <p>Make sure the charger is connected to a compatible power adapter.</p> </li> </ul> </li> </ol> <p>For further assistance, contact Cisco Merchandise Store Support at support@cisco-merchandise.com.</p>"},{"location":"kb/#cisco-store-orders-and-returns","title":"Cisco Store - Orders and Returns","text":"<p>When will I receive my order?</p> <p>In-stock products typically ship the next business day after you\u2019ve placed your order. Once the order has been dispatched, you will automatically be sent a tracking number to the email address that you provided during checkout. The delivery time will depend upon your selected shipping method and where the order is being shipped.</p> <p>**When will I receive a product if it's on back order?\u00a0**</p> <p>We regularly review inventory levels to minimize the number of out-of-stock items. Unfortunately, there can be factors that are outside of our control \u2013 such as the manufacturer having no inventory \u2013 which would lead to an item being temporarily out of stock on the Cisco\u00ae Store. Typically, we receive inventory of back-ordered items within one to four weeks. Once the item has been dispatched to you, you will be sent an email with the tracking number.</p> <p>How much is the shipping for my order?</p> <p>Shipping charges are calculated based upon the total volume and weight of your order. The website has an integration with UPS so that you receive the most up-to-date freight charges. During checkout, once you\u2019ve entered your shipping address, you will have a choice of freight services, from Next Day to Ground. Each of these options will show the related shipping fee.</p> <p>Can products be shipped to PO boxes?</p> <p>Our chosen freight partner is UPS. Unfortunately, UPS does not currently ship to PO box addresses.</p> <p>Will I be charged sales tax?</p> <p>In states where our commerce service provider and fulfillment partners have operations, we are required to charge sales tax on product purchases as well as shipping and handling. The Cisco Store currently collects sales tax in the following states: California, North Carolina, New York, Illinois and Texas.</p> <p>What is the policy and process for returns?</p> <p>Products that have not been used and are in new condition may be returned within 30 days at the cost of the buyer, Cisco do not cover return fees. Please email\u00a0merchstore-help@external.cisco.com\u00a0and a member of the team will be happy to help arrange this for you.</p> <p>Can I place an order via telephone or email?</p> <p>We ask and encourage you to place your order online, as you\u2019ll receive an instant confirmation that your order has been placed. If you would prefer to place your order by email, please contact us at\u00a0merchstore-help@external.cisco.com\u00a0and a member of the team will respond within 4 hours during business hours. Alternatively, you can call a member of the team at 646.603.6925 between 9 a.m. and 7 p.m. EST Monday through Friday.</p> <p>How can I track my order?</p> <p>Once your order has been dispatched, you will automatically be sent an email with the tracking information for your package. Alternatively, you can check your order status in the My Account section of the website.</p>"},{"location":"overview/","title":"Overview","text":""},{"location":"overview/#overview","title":"Overview","text":""},{"location":"overview/#learning-objectives","title":"Learning Objectives","text":"<p>This lab will give you an introduction to ...</p>"},{"location":"overview/#disclaimer","title":"Disclaimer","text":"<p>Although the lab design and configuration examples could be used as a reference, for design related questions please contact your representative at Cisco, or a Cisco partner.</p>"},{"location":"overview/#lab-access","title":"Lab Access","text":"<p>From your workstation open an RDP (Remote Desktop) session to the following host named \"wkst1\":</p> <ul> <li>IP: 1.2.3.4</li> <li>Username: corp\\demouser</li> <li>Password: C1sco12345</li> </ul>"},{"location":"overview/#getting-started","title":"Getting Started","text":"<p>This lab leverages Cisco dCloud ...</p>"},{"location":"topologies/","title":"Lab topologies","text":""},{"location":"topologies/#lab-topologies","title":"Lab topologies","text":""},{"location":"howToUse/admonition/","title":"Admonition","text":"<p>In addition to the  stock admonitions which are available out of the box we have added some additional branded admonitions which were created by Bobby McGonigle. </p> <p>Blank</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('Hello Blank!')\n</code></pre> <p>Vidcast</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('Hello Vidcast!')\n</code></pre> <p>Download</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('Hello Download!')\n</code></pre> <p>Cedeploy</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('Hello Ce-Deploy!')\n</code></pre> <p>Webex</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('Hello Webex!')\n</code></pre> <p>Gif</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('How should I pronounce Gif?')\n</code></pre> <p>Important</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('Hello Important!')\n</code></pre> <p>Challenge</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('Hello Challenge!')\n</code></pre> <p>Tool</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('Hello Tool!')\n</code></pre> <p>Curious</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>console.log('Hello Curious!')\n</code></pre>"},{"location":"howToUse/customFeatures/","title":"customFeatures","text":""},{"location":"howToUse/customFeatures/#adding-a-copy-button-without-a-code-block","title":"Adding a Copy Button Without a Code Block","text":"<p><code>This will copy the following text: &lt;copy&gt;Text to copy&lt;/copy&gt;</code> </p> <p>This will copy the following text: Text to copy</p>"},{"location":"howToUse/customFeatures/#adding-user-specific-variables-into-your-lab-guide","title":"Adding user specific variables into your lab guide","text":"<p>There may be times in which you want to embed some attendee specific information into the instructions of your lab guide, like credentials or phone numbers, which will be used on multiple pages of your lab guide.  You can gather the information via a form or you can pass a pre-encoded JSON string as a URL parameter to populate the variable values into the browser's session storage.  Then you can use a simple HTML tag with a special class name to update the values in the lab guide.  This feature can be combined with the copy button method above.</p>"},{"location":"howToUse/customFeatures/#form-method","title":"Form Method","text":"Show me the code <pre><code>&lt;form id=\"info\"&gt;\n\n\n&lt;label for=\"Admin\"&gt;Admin Login:&lt;/label&gt;\n&lt;input type=\"text\" id=\"Admin\" name=\"Admin\"&gt;&lt;br&gt;\n\n&lt;label for=\"PW\"&gt;Admin Password:&lt;/label&gt;\n&lt;input type=\"text\" id=\"PW\" name=\"PW\"&gt;&lt;br&gt;\n\n&lt;label for=\"EP\"&gt;Inbound Channel Name:&lt;/label&gt;\n&lt;input type=\"text\" id=\"EP\" name=\"EP\"&gt;&lt;br&gt;\n\n&lt;label for=\"DN\"&gt;Inbound Channel Phone Number:&lt;/label&gt;\n&lt;input type=\"text\" id=\"DN\" name=\"DN\"&gt;&lt;br&gt;\n\n&lt;label for=\"Queue\"&gt;Queue 1 Name:&lt;/label&gt;\n&lt;input type=\"text\" id=\"Queue\" name=\"Queue\"&gt;&lt;br&gt;\n\n&lt;label for=\"Queue2\"&gt;Queue 2 Name:&lt;/label&gt;\n&lt;input type=\"text\" id=\"Queue2\" name=\"Queue2\"&gt;&lt;br&gt;\n\n&lt;label for=\"Team\"&gt;Team 1 Name:&lt;/label&gt;\n&lt;input type=\"text\" id=\"Team\" name=\"Team\"&gt;&lt;br&gt;\n\n&lt;label for=\"Team2\"&gt;Team 2 Name:&lt;/label&gt;\n&lt;input type=\"text\" id=\"Team2\" name=\"Team2\"&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;button onclick=\"setValues()\"&gt;Update Lab Guide&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> Example Input Form Admin Login: Admin Password: Inbound Channel Name: Inbound Channel Phone Number: Queue 1 Name: Queue 2 Name: Team 1 Name: Team 2 Name: Update Lab Guide <p>Login: Provided by proctor</p> <p>Password: Provided by proctor</p> <p>Assigned Inbound Channel Name: Provided by proctor</p> <p>Assigned Inbound Channel Number: Provided by proctor</p> <p>Assigned Queue Name 1: Provided by proctor</p> <p>Assigned Queue Name 2: Provided by proctor</p> <p>Assigned Team name 1: Provided by proctor</p> <p>Assigned Team name 2: Provided by proctor</p>"},{"location":"howToUse/customFeatures/#url-method","title":"URL Method","text":"<p>If you have a lot of attendee variables in your lab, you may choose to precompile and encode them so that you can simply provide a URL link which will load all of their required information.</p> <p>To see this in action, add this string at the end of the URL for any page on this site: ?eyJBZG1pbiI6ImFkbWluQHh5ei5iaXoiLCJQVyI6InNVcGVyU2VjcmV0MTIzISIsIkVQIjoiRVAxIiwiRE4iOiIrMTkxMDU1NTEyMTUyIiwiUXVldWUiOiJRdWV1ZTEiLCJRdWV1ZTIiOiJRdWV1ZTIiLCJUZWFtIjoiVGVhbTEiLCJUZWFtMiI6IlRlYW0yIn0=</p>"},{"location":"howToUse/initialSetup/","title":"Initial Setup","text":""},{"location":"howToUse/initialSetup/#initial-setup","title":"Initial Setup","text":"<p>This lab guide template uses MKDocs to take your markdown documentation and transform it into an interactive web based lab guide.  You will need to install some software on your PC or Mac in order to take full advantage of the tool which will allow you to view your changes as you save them and ensure that your formatting is exactly how you want it.</p>"},{"location":"howToUse/initialSetup/#prerequisite-software-to-install","title":"Prerequisite Software to Install","text":"<ol> <li>Python</li> <li>Visual Studio Code</li> <li>Git</li> </ol>"},{"location":"howToUse/initialSetup/#setting-up-your-lab-guide-on-your-computer","title":"Setting up your lab guide on your computer","text":""},{"location":"howToUse/initialSetup/#clone-your-repository-with-git","title":"Clone your repository with git","text":"<p>Open Visual Studio Code</p> <p>Click the Source Control button in the left menu </p> <p>Click Clone Repository</p> <p>Enter the repository source:  https://github.com/WebexCC-SA/LAB-2334.git</p> <p>Select or create a new folder to clone the repository into.</p>"},{"location":"howToUse/initialSetup/#build-the-environment","title":"Build the environment","text":"<p>When prompted to open the cloned repository, select open.</p> <p>Drag open the terminal at the bottom of the Visual Studio Code window</p> Show Me <p></p> If you are on a PCIf you are on a Mac <p>In your terminal enter the following commands:</p> <p>python -m venv venv</p> <p>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</p> <p>venv\\Scripts\\activate.ps1</p> <p>pip install -r requirements.txt</p> <p>mkdocs serve</p> <p>Open a browser to http://127.0.0.1:8000 </p> <p>In your terminal enter the following commands:</p> <p>python -m venv venv</p> <p>source venv/bin/activate</p> <p>pip install -r requirements.txt</p> <p>mkdocs serve</p> <p>Open a browser to http://127.0.0.1:8000</p>"},{"location":"howToUse/postInitial/","title":"Using the tool after the initial setup","text":""},{"location":"howToUse/postInitial/#using-the-tool-after-the-initial-setup","title":"Using the tool after the initial setup","text":"<p>After the initial setup you will only need to take the following steps:</p> <p>Open Visual Studio Code</p> <p>Click the Source Control button in the left menu </p> <p>Click Open Folder and navigate to the folder where you cloned the repository</p> If you are on a PCIf you are on a Mac <p>In your terminal enter the following commands:</p> <p>venv\\Scripts\\activate.ps1</p> <p>mkdocs serve</p> <p>Open a browser to http://127.0.0.1:8000</p> <p>In your terminal enter the following commands:</p> <p>source venv/bin/activate</p> <p>mkdocs serve</p> <p>Open a browser to http://127.0.0.1:8000</p>"},{"location":"howToUse/references/","title":"References","text":""},{"location":"howToUse/references/#mk-docs-feature-reference","title":"MK Docs Feature Reference:","text":"<p>https://squidfunk.github.io/mkdocs-material/reference/ </p>"},{"location":"howToUse/references/#markdown-cheat-sheets","title":"Markdown Cheat Sheets:","text":"<p>https://www.markdownguide.org/cheat-sheet/ </p> <p>https://github.com/lifeparticle/Markdown-Cheatsheet </p>"},{"location":"howToUse/syncChanges/","title":"Publishing Your Changes","text":""},{"location":"howToUse/syncChanges/#publishing-your-changes","title":"Publishing Your Changes","text":"<p>As you progress with the creation of your lab guide, you should sync your changes periodically to GitHub.  </p>"},{"location":"howToUse/syncChanges/#syncing-your-changes-to-github","title":"Syncing your changes to GitHub","text":"<p>Make sure that you have saved all of the files you want to sync up to the repository</p> <p>Click the Source Control button in the left menu </p> <p>Click the plus sign next to each file you want to sync as you hover over the file names or alternatively, click the plus sign next to changes</p> <p>Enter a note about the changes you are making in the message text box</p> <p>Click the down chevron  on the commit button to reveal more options</p> <p>Select Commit &amp; Sync </p>"},{"location":"howToUse/syncChanges/#after-you-sync-your-changes-it-will-take-a-few-minutes-for-github-actions-to-build-the-website-so-that-you-can-view-all-of-the-changes-you-made","title":"After you Sync your changes, it will take a few minutes for GitHub Actions to build the website so that you can view all of the changes you made.","text":""}]}